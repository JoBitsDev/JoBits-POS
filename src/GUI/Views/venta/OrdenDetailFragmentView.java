/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Views.venta;

import GUI.Views.AbstractFragmentView;
import GUI.Views.util.AbstractCrossReferenePanel;
import java.awt.Container;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import restManager.controller.AbstractDialogController;
import restManager.controller.AbstractDetailController;
import restManager.controller.Controller;
import restManager.controller.venta.OrdenController;
import restManager.exceptions.DevelopingOperationException;
import restManager.persistencia.Orden;
import restManager.persistencia.ProductoVenta;
import restManager.persistencia.ProductovOrden;
import restManager.resources.R;
import restManager.util.RestManagerAbstractTableModel;
import restManager.util.comun;

/**
 *
 * @author Jorge
 */
public class OrdenDetailFragmentView extends AbstractFragmentView<Orden> {

    private AbstractCrossReferenePanel<ProductovOrden, ProductoVenta> crossReferencePanel;
    private Orden instance;
    private ButtonState state = ButtonState.ENVIAR_COCINA;

    public OrdenDetailFragmentView(Controller controller, Orden instance) {
        super(controller);
        this.instance = instance;
        initComponents();
    }

    public OrdenDetailFragmentView(Orden instance, Controller controller, Container parentComponent) {
        super(controller, parentComponent);
        this.instance = instance;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelroot = new javax.swing.JPanel();
        jPanelInfo = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelVALORFecha = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelVALORHora = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelVALORUsuario = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelVALORMesa = new javax.swing.JLabel();
        jLabelVALORNOORDEN = new javax.swing.JLabel();
        jPanelDetalles = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jideButtonImpimirTicket = new com.jidesoft.swing.JideButton();
        jCheckBoxPorciento = new javax.swing.JCheckBox();
        jSpinner1 = new javax.swing.JSpinner();
        jCheckBoxDELACASA = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabelVALORTotal = new javax.swing.JLabel();
        jPanelCrossReference = new javax.swing.JPanel();
        jXPanelBotones = new org.jdesktop.swingx.JXPanel();
        jPanel1 = new javax.swing.JPanel();
        jideButtonAgregarNota = new com.jidesoft.swing.JideButton();
        jideButtonCerrarMesaEnviarCocina = new com.jidesoft.swing.JideButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new java.awt.BorderLayout());

        jPanelroot.setBackground(new java.awt.Color(0, 204, 204));
        jPanelroot.setMinimumSize(new java.awt.Dimension(531, 370));
        jPanelroot.setOpaque(false);
        jPanelroot.setPreferredSize(new java.awt.Dimension(531, 570));
        jPanelroot.setLayout(new java.awt.BorderLayout());

        jPanelInfo.setBackground(new java.awt.Color(204, 204, 204));
        jPanelInfo.setBorder(javax.swing.BorderFactory.createCompoundBorder(new org.jdesktop.swingx.border.DropShadowBorder(), javax.swing.BorderFactory.createTitledBorder("Informaci√≥n")));
        jPanelInfo.setOpaque(false);
        jPanelInfo.setLayout(new java.awt.BorderLayout());

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(4, 2));

        jLabel3.setBackground(new java.awt.Color(153, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jLabel3.setText(bundle.getString("label_fecha")); // NOI18N
        jLabel3.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel4.add(jLabel3);

        jLabelVALORFecha.setBackground(new java.awt.Color(153, 255, 255));
        jLabelVALORFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelVALORFecha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelVALORFecha.setText("dd/mm/yy");
        jPanel4.add(jLabelVALORFecha);

        jLabel7.setBackground(new java.awt.Color(153, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText(bundle.getString("label_hora")); // NOI18N
        jPanel4.add(jLabel7);

        jLabelVALORHora.setBackground(new java.awt.Color(153, 255, 255));
        jLabelVALORHora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelVALORHora.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelVALORHora.setText("hh:mm");
        jPanel4.add(jLabelVALORHora);

        jLabel5.setBackground(new java.awt.Color(153, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText(bundle.getString("label_dependiente")); // NOI18N
        jPanel4.add(jLabel5);

        jLabelVALORUsuario.setBackground(new java.awt.Color(153, 255, 255));
        jLabelVALORUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelVALORUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelVALORUsuario.setText("Nombre Apellido");
        jPanel4.add(jLabelVALORUsuario);

        jLabel6.setBackground(new java.awt.Color(153, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText(bundle.getString("label_mesa")); // NOI18N
        jPanel4.add(jLabel6);

        jLabelVALORMesa.setBackground(new java.awt.Color(153, 255, 255));
        jLabelVALORMesa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelVALORMesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelVALORMesa.setText("M-xx");
        jPanel4.add(jLabelVALORMesa);

        jPanelInfo.add(jPanel4, java.awt.BorderLayout.CENTER);

        jLabelVALORNOORDEN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelVALORNOORDEN.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVALORNOORDEN.setText("No: 5534");
        jPanelInfo.add(jLabelVALORNOORDEN, java.awt.BorderLayout.LINE_END);

        jPanelroot.add(jPanelInfo, java.awt.BorderLayout.NORTH);

        jPanelDetalles.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDetalles.setLayout(new java.awt.BorderLayout());

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        jideButtonImpimirTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/impresora.png"))); // NOI18N
        jideButtonImpimirTicket.setToolTipText(bundle.getString("label_imprimircuenta")); // NOI18N
        jideButtonImpimirTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jideButtonImpimirTicketActionPerformed(evt);
            }
        });
        jPanel2.add(jideButtonImpimirTicket);

        jCheckBoxPorciento.setBackground(new java.awt.Color(255, 255, 153));
        jCheckBoxPorciento.setSelected(true);
        jCheckBoxPorciento.setText("%");
        jCheckBoxPorciento.setEnabled(false);
        jCheckBoxPorciento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPorcientoActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBoxPorciento);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(10.0f), Float.valueOf(-100.0f), Float.valueOf(100.0f), Float.valueOf(1.0f)));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jPanel2.add(jSpinner1);

        jCheckBoxDELACASA.setBackground(new java.awt.Color(255, 255, 153));
        jCheckBoxDELACASA.setText("De la Casa");
        jCheckBoxDELACASA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDELACASAActionPerformed(evt);
            }
        });
        jPanel2.add(jCheckBoxDELACASA);

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Total: ");
        jPanel2.add(jLabel2);

        jLabelVALORTotal.setBackground(new java.awt.Color(153, 255, 255));
        jLabelVALORTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelVALORTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelVALORTotal.setText("0.00 CUC");
        jLabelVALORTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel2.add(jLabelVALORTotal);

        jPanelDetalles.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanelCrossReference.setLayout(new java.awt.BorderLayout());
        jPanelDetalles.add(jPanelCrossReference, java.awt.BorderLayout.CENTER);

        jPanelroot.add(jPanelDetalles, java.awt.BorderLayout.CENTER);

        jXPanelBotones.setBorder(javax.swing.BorderFactory.createCompoundBorder(new org.jdesktop.swingx.border.DropShadowBorder(), javax.swing.BorderFactory.createTitledBorder("Controles")));
        jXPanelBotones.setOpaque(false);
        jXPanelBotones.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jideButtonAgregarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/nota.png"))); // NOI18N
        jideButtonAgregarNota.setToolTipText(bundle.getString("label_agregarnota")); // NOI18N
        jideButtonAgregarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jideButtonAgregarNotaActionPerformed(evt);
            }
        });
        jPanel1.add(jideButtonAgregarNota);

        jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/enviar_cocina.png"))); // NOI18N
        jideButtonCerrarMesaEnviarCocina.setMnemonic('c');
        jideButtonCerrarMesaEnviarCocina.setToolTipText(bundle.getString("label_cerrar_orden")); // NOI18N
        jideButtonCerrarMesaEnviarCocina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jideButtonCerrarMesaEnviarCocinaActionPerformed(evt);
            }
        });
        jPanel1.add(jideButtonCerrarMesaEnviarCocina);

        jXPanelBotones.add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanelroot.add(jXPanelBotones, java.awt.BorderLayout.SOUTH);

        add(jPanelroot, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxDELACASAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDELACASAActionPerformed
        instance.setDeLaCasa(jCheckBoxDELACASA.isSelected());
        getController().update(instance);
    }//GEN-LAST:event_jCheckBoxDELACASAActionPerformed

    private void jCheckBoxPorcientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPorcientoActionPerformed
        //   addPorcientoToOrden(jCheckBoxPorciento.isSelected());
    }//GEN-LAST:event_jCheckBoxPorcientoActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        getController().updatePorciento((float) jSpinner1.getValue());
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jideButtonAgregarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jideButtonAgregarNotaActionPerformed
        getController().addNota(getModel().getObjectAtSelectedRow());
    }//GEN-LAST:event_jideButtonAgregarNotaActionPerformed

    private void jideButtonImpimirTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jideButtonImpimirTicketActionPerformed
        getController().imprimirPreTicket();
    }//GEN-LAST:event_jideButtonImpimirTicketActionPerformed

    private void jideButtonCerrarMesaEnviarCocinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jideButtonCerrarMesaEnviarCocinaActionPerformed
        executeButtonState();
    }//GEN-LAST:event_jideButtonCerrarMesaEnviarCocinaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxDELACASA;
    private javax.swing.JCheckBox jCheckBoxPorciento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelVALORFecha;
    private javax.swing.JLabel jLabelVALORHora;
    private javax.swing.JLabel jLabelVALORMesa;
    private javax.swing.JLabel jLabelVALORNOORDEN;
    private javax.swing.JLabel jLabelVALORTotal;
    private javax.swing.JLabel jLabelVALORUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelCrossReference;
    private javax.swing.JPanel jPanelDetalles;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelroot;
    private javax.swing.JSpinner jSpinner1;
    private org.jdesktop.swingx.JXPanel jXPanelBotones;
    private com.jidesoft.swing.JideButton jideButtonAgregarNota;
    private com.jidesoft.swing.JideButton jideButtonCerrarMesaEnviarCocina;
    private com.jidesoft.swing.JideButton jideButtonImpimirTicket;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateView() {
        if (crossReferencePanel != null) {
            jPanelCrossReference.remove(crossReferencePanel);
        }
        initDefaults();
        jLabelVALORFecha.setText(R.DATE_FORMAT.format(getInstance().getVentafecha().getFecha()));
        jLabelVALORHora.setText(R.TIME_FORMAT.format(getInstance().getHoraComenzada()));
        jLabelVALORUsuario.setText(getInstance().getPersonalusuario().getUsuario());
        jLabelVALORMesa.setText(getInstance().getMesacodMesa().getCodMesa());
        jLabelVALORNOORDEN.setText(getInstance().getCodOrden());
        jCheckBoxDELACASA.setSelected(getInstance().getDeLaCasa());
        jSpinner1.setValue(getInstance().getPorciento());
        updateValorTotal();

    }

    public RestManagerAbstractTableModel<ProductovOrden> getModel() {
        return crossReferencePanel.getHandler().getTableModel();
    }

    @Override
    public void initDefaults() {
        crossReferencePanel = new AbstractCrossReferenePanel<ProductovOrden, ProductoVenta>("Productos de venta", getController().getPDVList()) {
            @Override
            public RestManagerAbstractTableModel<ProductovOrden> getTableModel() {
                return new RestManagerAbstractTableModel<ProductovOrden>(getInstance().getProductovOrdenList(), getjTableCrossReference()) {

                    @Override
                    public int getColumnCount() {
                        return 3;
                    }

                    @Override
                    public int getRowCount() {
                        return items.size();
                    }

                    @Override
                    public Object getValueAt(int rowIndex, int columnIndex) {
                        switch (columnIndex) {
                            case 0:
                                return items.get(rowIndex).getProductoVenta().getNombre();
                            case 1:
                                return items.get(rowIndex).getCantidad();
                            case 2:
                                return comun.redondeoPorExceso(items.get(rowIndex).getCantidad()
                                        * items.get(rowIndex).getProductoVenta().getPrecioVenta());
                            default:
                                return null;
                        }
                    }

                    @Override
                    public String getColumnName(int column) {
                        switch (column) {
                            case 0:
                                return "Nombre Producto";
                            case 1:
                                return "Cantidad";
                            case 2:
                                return "Precio Final";
                            default:
                                return null;
                        }
                    }

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return columnIndex == 1;
                    }

                    @Override
                    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                        switch (columnIndex) {
                            case 1:
                                items.get(rowIndex).setCantidad((float) aValue);
                                fireTableRowsUpdated(rowIndex, rowIndex);
                                state = ButtonState.ENVIAR_COCINA;
                                jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/enviar_cocina.png")));
                                updateValorTotal();
                                break;
                            default:
                                super.setValueAt(aValue, rowIndex, columnIndex);
                                break;
                        }
                    }

                    @Override
                    public Class<?> getColumnClass(int columnIndex) {
                        if (columnIndex == 1) {
                            return Float.class;
                        } else {
                            return super.getColumnClass(columnIndex); //To change body of generated methods, choose Tools | Templates.
                        }
                    }

                };
            }

            @Override
            public ProductovOrden transformK_T(ProductoVenta selected) {
                getController().addProduct(selected);
                getModel().setItems(getInstance().getProductovOrdenList());
                state = ButtonState.ENVIAR_COCINA;
                jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/enviar_cocina.png")));
                // getjTableCrossReference().repaint();
                return null;
            }

            @Override
            public void removeObjectSelected() {
                ProductovOrden po = getModel().getObjectAtSelectedRow();
                getController().removeProduct(po);
                getModel().setItems(getInstance().getProductovOrdenList());
                state = ButtonState.ENVIAR_COCINA;
                jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/enviar_cocina.png")));

                repaint();
            }
        };
        jPanelCrossReference.add(crossReferencePanel);
    }

    @Override
    public OrdenController getController() {
        return (OrdenController) super.getController();

    }

    public Orden getInstance() {
        return instance;

    }

    public void setInstance(Orden instance) {
        this.instance = instance;
        setVisible(true);
        updateView();

    }

    public void executeButtonState() {
        switch (state) {
            case DESPACHAR:
                getController().despachar();
                jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/enviar_cocina.png")));
                break;
            case ENVIAR_COCINA:
                getController().enviarACocina();
                state = ButtonState.DESPACHAR;
                jideButtonCerrarMesaEnviarCocina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/cobrar.png")));
                break;
        }

    }

    public void updateValorTotal() {
        jLabelVALORTotal.setText(comun.setDosLugaresDecimales(getController().getValorTotal()));
    }

    private enum ButtonState {
        DESPACHAR, ENVIAR_COCINA;
    }
}
