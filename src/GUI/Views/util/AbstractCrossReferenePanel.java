/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Views.util;

import com.jidesoft.hints.ListDataIntelliHints;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import restManager.util.RestManagerAbstractTableModel;

/**
 *
 * @author Jorge
 * @param <T> the table content data
 * @param <K> the combobox model data
 */
public abstract class AbstractCrossReferenePanel<T, K> extends javax.swing.JPanel {

    private final TableWithComboBoxAutoComplete<K, T> handler;
    private ListDataIntelliHints<K> intellihints;

    /**
     * Creates new form AbstractCrossReferenePanel
     *
     * @param jTextFieldDataName
     * @param autoCompletitionData
     */
    public AbstractCrossReferenePanel(String jTextFieldDataName, List<K> autoCompletitionData) {
        initComponents();
        jLabel1.setText(jTextFieldDataName);
        // intellihints = new ListDataIntelliHints(jTextFieldAutoComplete, autoCompletitionData);
        handler = new TableWithComboBoxAutoComplete<K, T>(
                jTableCrossReference, jButtonAgregarProd,
                jButtonDeleteProd, jTextFieldAutoComplete,
                getTableModel(), autoCompletitionData) {
            @Override
            public T transformK_to_T(K selected) {
                return transformK_T(selected);
            }

            @Override
            public void removeObjectAtSelectedRow() {
                removeObjectSelected();
            }

        };
    }

    public abstract RestManagerAbstractTableModel<T> getTableModel();

    public abstract T transformK_T(K selected);

    public void removeObjectSelected() {
        handler.getTableModel().removeObjectAtSelectedRow();
    }

    public TableWithComboBoxAutoComplete<K, T> getHandler() {
        return handler;
    }

    public JTable getjTableCrossReference() {
        return jTableCrossReference;
    }

    public ListDataIntelliHints<K> getIntellihints() {
        return intellihints;
    }

    public JScrollPane getjScrollPaneCrossReference() {
        return jScrollPaneCrossReference;
    }

    public JTextField getjTextFieldAutoComplete() {
        return jTextFieldAutoComplete;
    }

    public void setIntellihints(ListDataIntelliHints<K> intellihints) {
        this.intellihints = intellihints;
    }

    public void addItemToComboBox(K item) {
        intellihints.getCompletionList().add(item);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldAutoComplete = new javax.swing.JTextField();
        jButtonAgregarProd = new javax.swing.JButton();
        jButtonDeleteProd = new javax.swing.JButton();
        jScrollPaneCrossReference = new javax.swing.JScrollPane();
        jTableCrossReference = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jLabel1.setText(bundle.getString("label_producto_venta")); // NOI18N
        jPanel2.add(jLabel1);

        jTextFieldAutoComplete.setPreferredSize(new java.awt.Dimension(250, 26));
        jTextFieldAutoComplete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAutoCompleteFocusGained(evt);
            }
        });
        jTextFieldAutoComplete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAutoCompleteKeyPressed(evt);
            }
        });
        jPanel2.add(jTextFieldAutoComplete);

        jButtonAgregarProd.setText(bundle.getString("label_agregar")); // NOI18N
        jPanel2.add(jButtonAgregarProd);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jButtonDeleteProd.setText(bundle.getString("label_eliminar")); // NOI18N
        add(jButtonDeleteProd, java.awt.BorderLayout.PAGE_END);

        jTableCrossReference.setAutoCreateRowSorter(true);
        jScrollPaneCrossReference.setViewportView(jTableCrossReference);

        add(jScrollPaneCrossReference, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAutoCompleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAutoCompleteFocusGained
        jTextFieldAutoComplete.setText("");
    }//GEN-LAST:event_jTextFieldAutoCompleteFocusGained

    private void jTextFieldAutoCompleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAutoCompleteKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER && handler.getItems().getSelectedHint() != null) {
            T transformedInstance = transformK_T(handler.getItems().getSelectedHint());
            if (transformedInstance != null) {
                handler.getTableModel().addObject(transformedInstance);
                jTextFieldAutoComplete.setText("");
            }
                        
        }
    }//GEN-LAST:event_jTextFieldAutoCompleteKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarProd;
    private javax.swing.JButton jButtonDeleteProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPaneCrossReference;
    private javax.swing.JTable jTableCrossReference;
    private javax.swing.JTextField jTextFieldAutoComplete;
    // End of variables declaration//GEN-END:variables

}
