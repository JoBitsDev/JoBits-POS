package GUI;

import java.text.ParseException;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import restManager.persistencia.Orden;
import restManager.persistencia.Venta;
import restManager.persistencia.jpa.staticContent;
import restManager.resources.R;
import restManager.util.comun;

/**
 *
 * @author Jorge
 */
public class VentaLista extends javax.swing.JDialog {

    /**
     * Creates new form DiasSinArchivar
     */
    public VentaLista(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refreshDialog();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRect1 = new org.edisoncor.gui.panel.PanelRect();
        jLabelDiasSinArchivar = new javax.swing.JLabel();
        jCheckBoxSeleccionarTodos = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLista = new javax.swing.JTable();
        jButtonCrearSemana = new javax.swing.JButton();
        jButtonCierreVentas = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de d√≠as");

        jLabelDiasSinArchivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelDiasSinArchivar.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDiasSinArchivar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDiasSinArchivar.setText("Dias sin Archivar");

        jCheckBoxSeleccionarTodos.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxSeleccionarTodos.setText("Seleccionar Todos");
        jCheckBoxSeleccionarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSeleccionarTodosActionPerformed(evt);
            }
        });

        jTableLista.setAutoCreateRowSorter(true);
        jTableLista.setFont(jTableLista.getFont().deriveFont(jTableLista.getFont().getSize()+7f));
        jTableLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seleccionado", "Dia(Fecha)", "Total Recaudado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableLista);

        jButtonCrearSemana.setText("Crear Semana");
        jButtonCrearSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearSemanaActionPerformed(evt);
            }
        });

        jButtonCierreVentas.setText("Hacer Cierre de Ventas");
        jButtonCierreVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCierreVentasActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRect1Layout = new javax.swing.GroupLayout(panelRect1);
        panelRect1.setLayout(panelRect1Layout);
        panelRect1Layout.setHorizontalGroup(
            panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRect1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDiasSinArchivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRect1Layout.createSequentialGroup()
                        .addGroup(panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxSeleccionarTodos)
                            .addGroup(panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRect1Layout.createSequentialGroup()
                                    .addComponent(jButtonEliminar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSalir))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRect1Layout.createSequentialGroup()
                                    .addComponent(jButtonCrearSemana)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonCierreVentas))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)))
                        .addGap(7, 7, 7)))
                .addContainerGap())
        );
        panelRect1Layout.setVerticalGroup(
            panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRect1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDiasSinArchivar)
                .addGap(10, 10, 10)
                .addComponent(jCheckBoxSeleccionarTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCrearSemana)
                    .addComponent(jButtonCierreVentas))
                .addGap(18, 18, 18)
                .addGroup(panelRect1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonEliminar))
                .addGap(24, 24, 24))
        );

        getContentPane().add(panelRect1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSeleccionarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSeleccionarTodosActionPerformed
        boolean val = jCheckBoxSeleccionarTodos.isSelected();
        for (int i = 0; i < jTableLista.getRowCount(); i++) {
            jTableLista.setValueAt(val, i, 0);
        }
    }//GEN-LAST:event_jCheckBoxSeleccionarTodosActionPerformed

    private void jTableListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaMouseClicked
        if (evt.getClickCount() == 2) {
            try {
                Date f = restManager.resources.R.DATE_FORMAT.parse(
                        (String) jTableLista.getValueAt(jTableLista.getSelectedRow(), 1));
                VentaMain.getInstance(this.getParent(), true, staticContent.ventaJPA.findVenta(f));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Error al abrir el dia seleccionado");
            }

        }
    }//GEN-LAST:event_jTableListaMouseClicked

    private void jButtonCrearSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearSemanaActionPerformed
        JOptionPane.showMessageDialog(this, "Funcion no soportada actualmente. \n estamos trabajando en ello");

//        if(JOptionPane.showConfirmDialog(null, "Seguro que desea crear la semana?")==0)
//        try {
//            if (!getSeleccionadosDelaTabla().isEmpty()) {
//
//                if (annos.isEmpty()) {
//                    annos.add(new Anno(fecha.getYear() + 1900));
//                }
//
//                ArrayList<Dia> dias = getSeleccionadosDelaTabla();
//                for (int i = 0; i < annos.size(); i++) {
//                    if (dias.get(0).getFecha().getYear() + 1900 == annos.get(i).getAnno()) {
//                        CrearSemana(annos.get(i));
//                        return;
//                    }
//                }
//                CrearAnno(dias);
//
//            } else {
//                JOptionPane.showMessageDialog(null, "No hay elementos seleccionados.");
//            }
//        } catch (ParseException ex) {
//            Logger.getLogger(Dias_Sin_Archivar.class.getName()).log(Level.SEVERE, null, ex);
//
//        } catch (IndexOutOfBoundsException e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
//        }

    }//GEN-LAST:event_jButtonCrearSemanaActionPerformed

    private void jButtonCierreVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCierreVentasActionPerformed
        ArrayList<Venta> v;
        Date fechafin = new Date(100, 1, 1);
        Date fechainicio = R.TODAYS_DATE;
        try {
            v = new ArrayList<>(getSeleccionadosDelaTabla());

            Venta ret = new Venta();
            ret.setOrdenList(new ArrayList<>());
            for (Venta x : v) {
                ret.getOrdenList().addAll(x.getOrdenList());

                if (x.getFecha().after(fechafin)) {
                    fechafin = x.getFecha();
                }
                if (x.getFecha().before(fechainicio)) {
                    fechainicio = x.getFecha();
                }

            }
            ret.setFecha(fechainicio);
            new Resumen(this, true, ret, fechafin);
        } catch (NullPointerException | ParseException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_jButtonCierreVentasActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed

        try {
            if (JOptionPane.showConfirmDialog(this,
                    "Seguro desea eliminar los dias seleccionados.")
                    == JOptionPane.YES_OPTION) {
                List<Venta> ventas = getSeleccionadosDelaTabla();
                for (Venta v : ventas) {
                    for (Orden o : v.getOrdenList()) {
                        staticContent.ordenJPA.destroy(o.getCodOrden());
                    }
                    staticContent.ventaJPA.destroy(v.getFecha());
                }

            }
            JOptionPane.showMessageDialog(this, "Acci√≥n realizada exitosamente.");
            refreshDialog();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        dispose();

    }//GEN-LAST:event_jButtonSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCierreVentas;
    private javax.swing.JButton jButtonCrearSemana;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JCheckBox jCheckBoxSeleccionarTodos;
    private javax.swing.JLabel jLabelDiasSinArchivar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableLista;
    private org.edisoncor.gui.panel.PanelRect panelRect1;
    // End of variables declaration//GEN-END:variables

    private List<Venta> getSeleccionadosDelaTabla() throws ParseException {
        List<Venta> ret = new ArrayList<Venta>();

        for (int i = 0; i < jTableLista.getRowCount(); i++) {
            if ((boolean) jTableLista.getValueAt(i, 0)) {
                ret.add(staticContent.ventaJPA.findVenta(R.DATE_FORMAT.parse((String) jTableLista.getValueAt(i, 1))));
            }
        }

        return ret;
        
    }

    private void refreshDialog() {

        ArrayList[] tabla = comun.initArray(new ArrayList[3]);
        List<Venta> ventas = staticContent.ventaJPA.findVentaEntities();

        for (Venta v : ventas) {
            tabla[0].add(false);
            tabla[1].add(R.DATE_FORMAT.format(v.getFecha()));
            tabla[2].add(v.getVentaTotal());
            
        }

        try {
            comun.UpdateTable(tabla, jTableLista);
        } catch (Exception ex) {
            Logger.getLogger(VentaLista.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
