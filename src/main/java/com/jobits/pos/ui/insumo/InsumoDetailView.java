/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.insumo;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.adapter.SpinnerToValueModelConnector;
import com.jgoodies.binding.list.SelectionInList;
import com.jobits.pos.domain.models.Insumo;
import com.jobits.pos.domain.models.InsumoElaborado;
import com.jobits.pos.domain.models.ProductoInsumo;
import com.jobits.pos.domain.models.ProductoVenta;
import com.jobits.pos.recursos.R;
import com.jobits.pos.ui.AbstractViewPanel;
import com.jobits.pos.ui.DefaultValues;
import static com.jobits.pos.ui.insumo.presenter.InsumoDetailViewModel.*;
import static com.jobits.pos.ui.insumo.presenter.InsumoDetailViewPresenter.*;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.utils.AddFromPanel;
import com.jobits.pos.ui.utils.BindableTableModel;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.BorderLayout;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JSpinner;

/**
 *
 * @author Home
 */
public class InsumoDetailView extends AbstractViewPanel {

    private AddFromPanel<InsumoElaborado, Insumo> tableInsumoElab;
    private AddFromPanel<ProductoInsumo, ProductoVenta> tableProductoInsumo;

    public static final String VIEW_NAME = "Crear Insumo";

    /**
     * Creates new form InsumoDetailView
     *
     * @param presenter
     */
    public InsumoDetailView(AbstractViewPresenter presenter) {
        super(presenter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = MaterialComponentsFactory.Containers.getSecondaryPanel();
        jPanelInputs = MaterialComponentsFactory.Containers.getPrimaryPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 3), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        jTextFieldNombre = MaterialComponentsFactory.Input.getTextField("", "Nombre");
        jPanelSec = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jLabelUM = MaterialComponentsFactory.Displayers.getLabel();
        jComboBoxUM = MaterialComponentsFactory.Displayers.getComboBox();
        jLabelCostoU = MaterialComponentsFactory.Displayers.getLabel();
        jSpinnerCosto = new javax.swing.JSpinner();
        jLabelNombre4 = MaterialComponentsFactory.Displayers.getLabel();
        jSpinnerEstimacionStock = new javax.swing.JSpinner();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 3), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        jPanelTabla = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jScrollPaneTablas = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelUsos = new javax.swing.JPanel();
        jPanelDerivados = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanelCosto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jXLabelGasto = new org.jdesktop.swingx.JXLabel();
        jPanelControles = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jButtonCancelar = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonAdd = MaterialComponentsFactory.Buttons.getAcceptButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(600, 720));
        setMinimumSize(new java.awt.Dimension(600, 380));
        setPreferredSize(new java.awt.Dimension(600, 720));
        setLayout(new java.awt.BorderLayout());

        jPanelMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 1, 1));
        jPanelMain.setMaximumSize(new java.awt.Dimension(700, 700));
        jPanelMain.setMinimumSize(new java.awt.Dimension(248, 250));
        jPanelMain.setPreferredSize(new java.awt.Dimension(570, 700));
        jPanelMain.setLayout(new javax.swing.BoxLayout(jPanelMain, javax.swing.BoxLayout.PAGE_AXIS));

        jPanelInputs.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 5, 1));
        jPanelInputs.setLayout(new javax.swing.BoxLayout(jPanelInputs, javax.swing.BoxLayout.PAGE_AXIS));
        jPanelInputs.add(filler1);

        jTextFieldNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextFieldNombre.setBorder(null);
        jTextFieldNombre.setMaximumSize(new java.awt.Dimension(250, 50));
        jTextFieldNombre.setMinimumSize(new java.awt.Dimension(150, 50));
        jTextFieldNombre.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanelInputs.add(jTextFieldNombre);

        jPanelSec.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 20));
        jPanelSec.setForeground(new java.awt.Color(255, 255, 255));
        jPanelSec.setMaximumSize(new java.awt.Dimension(700, 200));
        jPanelSec.setMinimumSize(new java.awt.Dimension(700, 200));
        jPanelSec.setPreferredSize(new java.awt.Dimension(700, 130));
        jPanelSec.setLayout(new java.awt.GridLayout(3, 2, 150, 10));

        jLabelUM.setBackground(new java.awt.Color(255, 255, 255));
        jLabelUM.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jLabelUM.setText(bundle.getString("label_um")); // NOI18N
        jLabelUM.setMinimumSize(new java.awt.Dimension(24, 20));
        jLabelUM.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jLabelUM);

        jComboBoxUM.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBoxUM.setMinimumSize(new java.awt.Dimension(24, 20));
        jComboBoxUM.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jComboBoxUM);

        jLabelCostoU.setBackground(new java.awt.Color(255, 255, 255));
        jLabelCostoU.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelCostoU.setText(bundle.getString("label_costo_unidad")); // NOI18N
        jLabelCostoU.setMinimumSize(new java.awt.Dimension(24, 20));
        jLabelCostoU.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jLabelCostoU);

        jSpinnerCosto.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jSpinnerCosto.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 5.0f));
        jSpinnerCosto.setMinimumSize(new java.awt.Dimension(24, 20));
        jSpinnerCosto.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jSpinnerCosto);

        jLabelNombre4.setBackground(new java.awt.Color(255, 255, 255));
        jLabelNombre4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelNombre4.setText(bundle.getString("label_est_stock")); // NOI18N
        jLabelNombre4.setMinimumSize(new java.awt.Dimension(24, 20));
        jLabelNombre4.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jLabelNombre4);

        jSpinnerEstimacionStock.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jSpinnerEstimacionStock.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 5.0f));
        jSpinnerEstimacionStock.setMinimumSize(new java.awt.Dimension(24, 20));
        jSpinnerEstimacionStock.setPreferredSize(new java.awt.Dimension(0, 26));
        jPanelSec.add(jSpinnerEstimacionStock);

        jPanelInputs.add(jPanelSec);
        jPanelInputs.add(filler2);

        jPanelMain.add(jPanelInputs);

        jPanelTabla.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTabla.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        jPanelTabla.setForeground(new java.awt.Color(255, 255, 255));
        jPanelTabla.setMinimumSize(new java.awt.Dimension(600, 300));
        jPanelTabla.setOpaque(false);
        jPanelTabla.setPreferredSize(new java.awt.Dimension(600, 300));
        jPanelTabla.setLayout(new java.awt.BorderLayout());

        jScrollPaneTablas.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPaneTablas.setOpaque(false);
        jScrollPaneTablas.setPreferredSize(new java.awt.Dimension(100, 50));

        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setToolTipText(null);
        jTabbedPane1.setOpaque(true);

        jPanelUsos.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Usos", jPanelUsos);

        jPanelDerivados.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 5, 20));
        jPanel2.setLayout(new java.awt.BorderLayout());
        //jPanel2.setVisible(false);

        jPanelCosto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 15, 1, 1));
        jPanelCosto.setOpaque(false);
        jPanelCosto.setLayout(new java.awt.BorderLayout());

        jLabel1.setForeground(DefaultValues.PRIMARY_COLOR_DARK);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/dolar_indigo.png"))); // NOI18N
        jLabel1.setText(":   ");
        jPanelCosto.add(jLabel1, java.awt.BorderLayout.WEST);

        jXLabelGasto.setForeground(DefaultValues.PRIMARY_COLOR_DARK);
        jXLabelGasto.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jXLabelGasto.setText("0.00"); // NOI18N
        jPanelCosto.add(jXLabelGasto, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanelCosto, java.awt.BorderLayout.LINE_END);

        jPanelDerivados.add(jPanel2, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("Derivados", jPanelDerivados);

        jScrollPaneTablas.setViewportView(jTabbedPane1);

        jPanelTabla.add(jScrollPaneTablas, java.awt.BorderLayout.CENTER);

        jPanelMain.add(jPanelTabla);

        add(jPanelMain, java.awt.BorderLayout.CENTER);

        jPanelControles.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jButtonCancelar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonCancelar.setText(bundle.getString("label_cancelar")); // NOI18N
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanelControles.add(jButtonCancelar);

        jButtonAdd.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonAdd.setText(bundle.getString("label_crear")); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanelControles.add(jButtonAdd);

        add(jPanelControles, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
    }//GEN-LAST:event_jButtonAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<R.UM> jComboBoxUM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCostoU;
    private javax.swing.JLabel jLabelNombre4;
    private javax.swing.JLabel jLabelUM;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelControles;
    private javax.swing.JPanel jPanelCosto;
    private javax.swing.JPanel jPanelDerivados;
    private javax.swing.JPanel jPanelInputs;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelSec;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JPanel jPanelUsos;
    private javax.swing.JScrollPane jScrollPaneTablas;
    private javax.swing.JSpinner jSpinnerCosto;
    private javax.swing.JSpinner jSpinnerEstimacionStock;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldNombre;
    private org.jdesktop.swingx.JXLabel jXLabelGasto;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {

        //INPUTS
        Bindings.bind(jTextFieldNombre, getPresenter().getModel(PROP_NOMBRE_INSUMO));
        Bindings.bind(jComboBoxUM, new SelectionInList<>(
                getPresenter().getModel(PROP_LIST_UNIDADES_MEDIDA),
                getPresenter().getModel(PROP_UNIDAD_MEDIDA_SELECTED)));

        //JSPINNERS
        SpinnerToValueModelConnector connector = new SpinnerToValueModelConnector(jSpinnerCosto.getModel(),
                getPresenter().getModel(PROP_COSTO_UNITARIO), 0);
        Bindings.bind(jSpinnerCosto, "value", getPresenter().getModel(PROP_COSTO_UNITARIO));

        SpinnerToValueModelConnector connector2 = new SpinnerToValueModelConnector(jSpinnerEstimacionStock.getModel(),
                getPresenter().getModel(PROP_ESTIMACION_DE_STOCK), 0);
        Bindings.bind(jSpinnerEstimacionStock, "value", getPresenter().getModel(PROP_ESTIMACION_DE_STOCK));

//        SpinnerToValueModelConnector connector3 = new SpinnerToValueModelConnector(jSpinnerCantidadCreada.getModel(),
//                getPresenter().getModel(PROP_CANTIDAD_CREADA), 0);
//        Bindings.bind(jSpinnerCantidadCreada, "value", getPresenter().getModel(PROP_CANTIDAD_CREADA));
        //BUTTONS
        jButtonAdd.setAction(getPresenter().getOperation(ACTION_AGREGAR));
        jButtonCancelar.setAction(getPresenter().getOperation(ACTION_CANCELAR));
        //Bindings.bind(jToggleButtonEnableTable, getPresenter().getModel(PROP_TABBED_PANE_ENABLED));
        Bindings.bind(jButtonAdd, "text", getPresenter().getModel(PROP_CREAR_EDITAR_BUTTON_TEXT));

        //DISPLAYERS
        Bindings.bind(jXLabelGasto, getPresenter().getModel(PROP_VALOR_DEL_COSTO_TEXT));
        //Bindings.bind(jPanelTabla, "visible", getPresenter().getModel(PROP_TABBED_PANE_ENABLED));
    }

    @Override
    public void uiInit() {
        initComponents();

        AddFromPanel.AddFromPanelBuilder<InsumoElaborado, Insumo> builder = AddFromPanel.builder();

        builder.addAction(getPresenter().getOperation(ACTION_AGREGAR_INSUMO));
        builder.removeAction(getPresenter().getOperation(ACTION_ELIMINAR_INSUMO));
        builder.autoCOmpletitionDataSelection(getPresenter().getModel(PROP_INSUMO_DISPONIBLE_SELECIONADO));
        builder.autoCompletitionData(getPresenter().getModel(PROP_LISTA_INSUMOS_DISPONIBLES));
        builder.jTextFieldDataName("Ingredientes");
        builder.tableDataHolder(getPresenter().getModel(PROP_LISTA_INSUMOS_CONTENIDOS));
        builder.tableSelectionDataHolder(getPresenter().getModel(PROP_INSUMO_CONTENIDO_SELECCIONADO));

        BindableTableModel<InsumoElaborado> tableModel
                = new BindableTableModel<InsumoElaborado>() {
            @Override
            public int getColumnCount() {
                return 5;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getInsumo_derivado_nombre().getCodInsumo();
                    case 1:
                        return getRow(rowIndex).getInsumo_derivado_nombre().getNombre();
                    case 2:
                        return getRow(rowIndex).getInsumo_derivado_nombre().getUm();
                    case 3:
                        return getRow(rowIndex).getCantidad();
                    case 4:
                        return getRow(rowIndex).getCosto();
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Codigo";
                    case 1:
                        return "Nombre";
                    case 2:
                        return "UM";
                    case 3:
                        return "Cantidad";
                    case 4:
                        return "Costo";
                    default:
                        return null;
                }
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                //return columnIndex == 3;
                return columnIndex == 3 ? true : super.isCellEditable(rowIndex, columnIndex); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return String.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return Float.class;
                    case 4:
                        return Float.class;
                    default:
                        return null;
                }
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 3:
                        getRow(rowIndex).setCantidad((float) aValue);
                        break;
                    case 4:
                        getRow(rowIndex).setCosto((float) aValue);
                        break;
                }
                fireTableCellUpdated(rowIndex, columnIndex);
            }
        };
        builder.tableModel(tableModel);

        tableInsumoElab = builder.build();
        jPanelDerivados.add(tableInsumoElab, BorderLayout.CENTER);

        tableInsumoElab.getjPanelOpcionesContainer().add(jPanelCosto, java.awt.BorderLayout.WEST);

//        getPresenter().addBeanPropertyChangeListener(PROP_INSUMO_DISPONIBLE_SEL, (PropertyChangeEvent evt) -> {
//            if (evt.getNewValue() == null) {
//                crossReferencePanel.getJTextFieldAutoComplete().setText("");
//            }
//        });

        AddFromPanel.AddFromPanelBuilder<ProductoInsumo, ProductoVenta> builder2 = AddFromPanel.builder();

        builder2.addAction(getPresenter().getOperation(ACTION_AGREGAR_PRODUCTO));
        builder2.removeAction(getPresenter().getOperation(ACTION_ELIMINAR_PRODUCTO));
        builder2.autoCOmpletitionDataSelection(getPresenter().getModel(PROP_PRODUCTO_DISPONIBLE_SELECCIONADO));
        builder2.autoCompletitionData(getPresenter().getModel(PROP_LISTA_PRODUCTOS_DISPONIBLES));
        builder2.jTextFieldDataName("Usos");
        builder2.tableDataHolder(getPresenter().getModel(PROP_LISTA_PRODUCTOS_CONTENIDOS));
        builder2.tableSelectionDataHolder(getPresenter().getModel(PROP_PRODUCTO_CONTENIDO_SELECCIONADO));

        BindableTableModel<ProductoInsumo> tableModel2
                = new BindableTableModel<ProductoInsumo>() {
            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getProductoVenta().getCodigoProducto();
                    case 1:
                        return getRow(rowIndex).getProductoVenta().getNombre();
                    case 2:
                        return getRow(rowIndex).getInsumo().getUm();
                    case 3:
                        return getRow(rowIndex).getCantidad();
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Codigo";
                    case 1:
                        return "Nombre";
                    case 2:
                        return "U/M";
                    case 3:
                        return "Cantidad";
                    default:
                        return null;
                }
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                //return columnIndex == 3;
                return columnIndex == 3 ? true : super.isCellEditable(rowIndex, columnIndex); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return String.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return Float.class;
                    default:
                        return null;
                }
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 3:
                        getRow(rowIndex).setCantidad((float) aValue);
                        break;
                }
                fireTableCellUpdated(rowIndex, columnIndex);
            }
        };
        builder2.tableModel(tableModel2);

        tableProductoInsumo = builder2.build();
        jPanelUsos.add(tableProductoInsumo, BorderLayout.CENTER);

        jTabbedPane1.setTitleAt(0, "Usos (" + tableProductoInsumo.getTableModel().getItemsSize() + ")");
        jTabbedPane1.setTitleAt(1, "Derivados (" + tableInsumoElab.getTableModel().getItemsSize() + ")");

//        if (tableInsumoElab.getTableModel().getItemsSize() == 0) {
//            jSpinnerCantidadCreada.setEnabled(false);
//        } else {
//            jSpinnerCantidadCreada.setEnabled(true);
//        }
        tableInsumoElab.getTableModel().addTableModelListener((e) -> {
            jTabbedPane1.setTitleAt(1, "Derivados (" + tableInsumoElab.getTableModel().getItemsSize() + ")");
//            if (tableInsumoElab.getTableModel().getItemsSize() == 0) {
//                jSpinnerCantidadCreada.setEnabled(false);
//            } else {
//                jSpinnerCantidadCreada.setEnabled(true);
//            }
        });
        tableProductoInsumo.getTableModel().addTableModelListener((e) -> {
            jTabbedPane1.setTitleAt(0, "Usos (" + tableProductoInsumo.getTableModel().getItemsSize() + ")");
        });

    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }
}
