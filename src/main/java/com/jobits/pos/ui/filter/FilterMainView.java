/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.filter;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.list.SelectionInList;
import com.root101.swing.material.standards.MaterialIcons;
import com.jobits.pos.ui.AbstractViewPanel;
import com.jobits.pos.ui.DefaultValues;
import com.jobits.pos.ui.filter.presenter.AbstractFilterTypePresenter;
import static com.jobits.pos.ui.filter.presenter.FilterViewModel.*;
import com.jobits.pos.ui.filter.presenter.FilterViewPresenter;
import static com.jobits.pos.ui.filter.presenter.FilterViewPresenter.*;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.Component;
import java.beans.PropertyChangeEvent;

/**
 *
 * @author Home
 */
public class FilterMainView extends AbstractViewPanel {

    public static final String VIEW_NAME = "Filter";

    /**
     * Creates new form FilterView
     *
     * @param presenter
     */
    public FilterMainView(FilterViewPresenter presenter) {
        super(presenter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanelMain = new javax.swing.JPanel();
        jScrollPane1 = MaterialComponentsFactory.Containers.getScrollPane();
        jPanelCardsContainer = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jComboBoxFilters = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButtonRemoveFilter = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonFilter = MaterialComponentsFactory.Buttons.getMaterialButton();
        jButtonAddFilter = MaterialComponentsFactory.Buttons.getOutlinedButton();

        setMinimumSize(new java.awt.Dimension(30, 0));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(30, 400));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jToggleButton1.setIcon(MaterialIcons.ARROW_DROP_LEFT);
        jToggleButton1.setToolTipText("Filtros");
        jToggleButton1.setMaximumSize(new java.awt.Dimension(20, 20));
        jToggleButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        jToggleButton1.setSelectedIcon(MaterialIcons.ARROW_DROP_RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanel1.add(jToggleButton1, gridBagConstraints);

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.WEST);

        jPanelMain.setBorder(new javax.swing.border.LineBorder(DefaultValues.SECONDARY_COLOR, 2, true));
        jPanelMain.setPreferredSize(new java.awt.Dimension(220, 142));
        jPanelMain.setLayout(new java.awt.BorderLayout());

        jPanelCardsContainer.setLayout(new java.awt.GridLayout(40, 1, 4, 4));
        jScrollPane1.setViewportView(jPanelCardsContainer);

        jPanelMain.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jComboBoxFilters.setPreferredSize(new java.awt.Dimension(180, 30));
        jPanel5.add(jComboBoxFilters, new java.awt.GridBagConstraints());

        jPanel4.add(jPanel5);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonRemoveFilter.setIcon(MaterialIcons.RESTORE);
        jButtonRemoveFilter.setToolTipText("Reiniciar Filtros");
        jButtonRemoveFilter.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel3.add(jButtonRemoveFilter, new java.awt.GridBagConstraints());

        jButtonFilter.setText("Filtrar");
        jButtonFilter.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel3.add(jButtonFilter, new java.awt.GridBagConstraints());

        jButtonAddFilter.setIcon(MaterialIcons.ADD_CIRCLE);
        jButtonAddFilter.setToolTipText("Agregar Filtros");
        jButtonAddFilter.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel3.add(jButtonAddFilter, new java.awt.GridBagConstraints());

        jPanel4.add(jPanel3);

        jPanelMain.add(jPanel4, java.awt.BorderLayout.SOUTH);

        add(jPanelMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddFilter;
    private javax.swing.JButton jButtonFilter;
    private javax.swing.JButton jButtonRemoveFilter;
    private javax.swing.JComboBox<String> jComboBoxFilters;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelCardsContainer;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {
        Bindings.bind(jPanelMain, "visible", getPresenter().getModel(PROP_SHOW_PANEL));
        Bindings.bind(jComboBoxFilters, new SelectionInList<>(
                getPresenter().getModel(PROP_FILTROS_DISPONIBLES),
                getPresenter().getModel(PROP_FILTRO_SELECCIONADO)));
        jToggleButton1.addActionListener(getPresenter().getOperation(ACTION_SET_PANEL_VISIBLE));
        jButtonAddFilter.addActionListener(getPresenter().getOperation(ACTION_ADD_FILTER));
        jButtonFilter.addActionListener(getPresenter().getOperation(ACTION_FILTRAR));
        jButtonRemoveFilter.addActionListener(getPresenter().getOperation(ACTION_REMOVE_ALL_FILTERS));
    }

    @Override
    public void uiInit() {
        initComponents();
        getPresenter().addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if (evt.getNewValue() != null) {
                switch (evt.getPropertyName()) {
                    case PROP_FILTER_ADDED:
                        jPanelCardsContainer.add(new FilterCardView((AbstractFilterTypePresenter) evt.getNewValue()));
                        break;
                    case PROP_FILTER_DELETED:
                        for (Component filterCard : jPanelCardsContainer.getComponents()) {
                            if (((FilterCardView) filterCard).getPresenter().equals((AbstractFilterTypePresenter) evt.getNewValue())) {
                                jPanelCardsContainer.remove(filterCard);
                                break;
                            }
                        }
                        jPanelCardsContainer.repaint();
                        jPanelCardsContainer.revalidate();
                        break;
                    case PROP_FILTERS_RESETED:
                        jPanelCardsContainer.removeAll();
                        jPanelCardsContainer.repaint();
                        jPanelCardsContainer.revalidate();
                        break;
                }
            }

        });
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

    @Override
    public FilterViewPresenter getPresenter() {
        return (FilterViewPresenter) super.getPresenter(); //To change body of generated methods, choose Tools | Templates.
    }

}
