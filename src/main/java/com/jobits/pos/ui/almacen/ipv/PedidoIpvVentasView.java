/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.almacen.ipv;

import com.jobits.pos.controller.AbstractDialogController;
import com.jobits.pos.domain.models.IpvVentaRegistro;
import com.jobits.pos.domain.models.Almacen;
import com.jobits.pos.domain.models.Cocina;
import com.jobits.pos.domain.models.ProductoInsumo;
import com.jobits.pos.domain.ProdcutoVentaPedidoModel;
import com.jobits.pos.ui.OldAbstractView;
import com.jobits.pos.ui.utils.OldAbstractCrossReferenePanel;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import com.jobits.pos.controller.almacen.PedidoIpvVentasController;
import com.jobits.pos.domain.VentaDAO1;
import com.jobits.pos.domain.InsumoPedidoModel;
import com.jobits.pos.ui.utils.RestManagerAbstractTableModel;
import com.jobits.pos.ui.utils.RestManagerComboBoxModel;
import javax.swing.JFrame;

/**
 *
 * @author Jorge
 */
public class PedidoIpvVentasView extends OldAbstractView {

    private OldAbstractCrossReferenePanel<ProdcutoVentaPedidoModel, IpvVentaRegistro> porPedirTable;
    private RestManagerAbstractTableModel<InsumoPedidoModel> listaPedido;
    private List<IpvVentaRegistro> ipvProductList;
    private Cocina elaboracion;

    public PedidoIpvVentasView(DialogType DIALOG_TYPE, AbstractDialogController controller) {
        super(DIALOG_TYPE, controller);
    }

//    public PedidoIpvVentasView(JFrame owner, List<IpvVentaRegistro> productosIpv, Cocina elaboracion) {
//        super(DialogType.INPUT_LARGE, new PedidoIpvVentasController(), owner, true);
//        this.elaboracion = elaboracion;
//        ipvProductList = productosIpv;
//        initComponents();
//        initVariables();
//        setVisible(true);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanelTop = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanelAPedir = new javax.swing.JPanel();
        jPanelPedido = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePedido = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/confirmar.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jButton1.setText(bundle.getString("label_confirmar")); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        getContentPane().add(jPanel5, java.awt.BorderLayout.SOUTH);

        jPanelTop.setLayout(new java.awt.BorderLayout());

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/logout40.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanelTop.add(jButton3, java.awt.BorderLayout.WEST);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel1.setText("Pedir del almcen");
        jPanel1.add(jLabel1);

        jComboBox1.setPreferredSize(new java.awt.Dimension(170, 27));
        jPanel1.add(jComboBox1);

        jPanelTop.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelTop, java.awt.BorderLayout.PAGE_START);

        jPanelAPedir.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "A pedir", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font(".SF NS Text", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jPanelAPedir.setPreferredSize(new java.awt.Dimension(100, 0));
        jPanelAPedir.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanelAPedir, java.awt.BorderLayout.CENTER);

        jPanelPedido.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font(".SF NS Text", 0, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        jPanelPedido.setPreferredSize(new java.awt.Dimension(300, 0));
        jPanelPedido.setLayout(new java.awt.BorderLayout());

        jTablePedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Insumo", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePedido);
        if (jTablePedido.getColumnModel().getColumnCount() > 0) {
            jTablePedido.getColumnModel().getColumn(0).setResizable(false);
            jTablePedido.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanelPedido.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelPedido, java.awt.BorderLayout.EAST);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (getController().realizarPedidoDeIpv(listaPedido.getItems(),
                porPedirTable.getHandler().getTableModel().getItems(),
                elaboracion, (Almacen) jComboBox1.getSelectedItem())) {
            dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void initVariables() {
        jComboBox1.setModel(new RestManagerComboBoxModel<>(getController().getAlmacenList()));
        jComboBox1.setSelectedIndex(0);

        porPedirTable = new OldAbstractCrossReferenePanel<ProdcutoVentaPedidoModel, IpvVentaRegistro>("Productos de IPV", ipvProductList) {
            @Override
            protected RestManagerAbstractTableModel<ProdcutoVentaPedidoModel> getTableModel() {
                return new RestManagerAbstractTableModel<ProdcutoVentaPedidoModel>(new ArrayList<ProdcutoVentaPedidoModel>(), getjTableCrossReference()) {
                    @Override
                    public int getColumnCount() {
                        return 2;
                    }

                    @Override
                    public Object getValueAt(int rowIndex, int columnIndex) {
                        return columnIndex == 0
                                ? getItems().get(rowIndex).getIpvProducto().getProductoVenta()
                                : getItems().get(rowIndex).getCantidad();
                    }

                    @Override
                    public String getColumnName(int column) {
                        return column == 0
                                ? "Producto IPV"
                                : "Cantidad pedida";
                    }
                };
            }

            @Override
            protected ProdcutoVentaPedidoModel transformK_T(IpvVentaRegistro selected) {
                float cantidad = Float.parseFloat(JOptionPane.showInputDialog(this, "Introduzca la cantidad a pedir"));
                return new ProdcutoVentaPedidoModel(selected, cantidad);
            }
        };
        porPedirTable.getHandler().getTableModel().addTableModelListener((TableModelEvent e) -> {
            actualizarTablaPedido();
        });
        jPanelAPedir.add(porPedirTable);

        listaPedido = new RestManagerAbstractTableModel<InsumoPedidoModel>(new ArrayList<InsumoPedidoModel>(), jTablePedido) {
            @Override
            public int getColumnCount() {
                return 2;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                return columnIndex == 0
                        ? getItems().get(rowIndex).getInsumo()
                        : getItems().get(rowIndex).getCantidad();
            }

            @Override
            public String getColumnName(int column) {
                return column == 0
                        ? "Insumo en almacen"
                        : "Cantidad";
            }
        };
        jTablePedido.setModel(listaPedido);

        getController().setView(this);
    }

    @Override
    public PedidoIpvVentasController getController() {
        return (PedidoIpvVentasController) super.getController(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void updateView() {
    }

    private void actualizarTablaPedido() {
        List<ProdcutoVentaPedidoModel> porPedir = porPedirTable.getHandler().getTableModel().getItems();
        ArrayList<ProductoInsumo> productoInsumo = new ArrayList<>();
        for (ProdcutoVentaPedidoModel x : porPedir) {
            VentaDAO1.joinListsProductoInsumos(productoInsumo, new ArrayList<>(x.getIpvProducto().getProductoVenta().getProductoInsumoList()), x.getCantidad());
        }
        List<InsumoPedidoModel> pedido = new ArrayList<>();
        for (ProductoInsumo x : productoInsumo) {
            pedido.add(new InsumoPedidoModel(x.getInsumo(), x.getCantidad()));
        }
        listaPedido.setItems(pedido);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<Almacen> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelAPedir;
    private javax.swing.JPanel jPanelPedido;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePedido;
    // End of variables declaration//GEN-END:variables
}
