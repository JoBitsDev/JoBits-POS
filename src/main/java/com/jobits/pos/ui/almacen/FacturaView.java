/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.almacen;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.adapter.SpinnerToValueModelConnector;
import com.jgoodies.binding.list.SelectionInList;
import com.jhw.swing.material.standars.MaterialIcons;
import com.jobits.pos.controller.almacen.AlmacenManageController.CheckBoxType;
import com.jobits.pos.domain.TransaccionSimple;
import com.jobits.pos.domain.models.Insumo;
import com.jobits.pos.domain.models.InsumoAlmacen;
import com.jobits.pos.domain.models.TransaccionTransformacion;
import com.jobits.pos.main.Application;
import com.jobits.pos.ui.AbstractViewPanel;
import static com.jobits.pos.ui.almacen.presenter.FacturaViewModel.*;
import static com.jobits.pos.ui.almacen.presenter.FacturaViewPresenter.*;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.utils.AddFromPanel;
import com.jobits.pos.ui.utils.BindableListIntelliHint;
import com.jobits.pos.ui.utils.BindableTableModel;
import com.jobits.pos.ui.utils.RestaurantManagerListIntelliHint;
import com.jobits.pos.ui.utils.utils;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.BorderLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import org.checkerframework.checker.units.qual.K;

/**
 *
 * @author Home
 */
public class FacturaView extends AbstractViewPanel {

    public static final String VIEW_NAME = "Facturas";

    BindableListIntelliHint<K> autoCompleteModel;
    public static RestaurantManagerListIntelliHint<InsumoAlmacen> list;
    private AddFromPanel<TransaccionTransformacion, Insumo> tableInsumosTransformados;

    /**
     * Creates new form FacturaView
     *
     * @param presenter
     */
    public FacturaView(AbstractViewPresenter presenter) {
        super(presenter);
        jTextFieldInsumo.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanelHeader = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jPanel12 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel1 = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jComboBoxOperationSelector = new javax.swing.JComboBox<>();
        jPaneloperaciones = new javax.swing.JPanel();
        jPanelInputs = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanelInsumo = new javax.swing.JPanel();
        jTextFieldInsumo = MaterialComponentsFactory.Input.getTextField("", "Insumo");
        jPanelCantidad = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jSpinnerCantidad = new javax.swing.JSpinner();
        jLabelUM = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanelMontoEntrada = new javax.swing.JPanel();
        jTextFieldMonto = MaterialComponentsFactory.Input.getTextField("", "Monto");
        jPanelDestino = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxDestino = new javax.swing.JComboBox<>();
        jPanelRazonRebaja = new javax.swing.JPanel();
        jTextFieldCausaRebaja = MaterialComponentsFactory.Input.getTextField("", "Causa de Rebaja");
        jPanel6 = new javax.swing.JPanel();
        jButtonAgregarInsumoEntrada = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonEliminarInsumoEntrada = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jPanelTablas = new javax.swing.JPanel();
        jPanelTablaGeneral = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEntrada = new javax.swing.JTable();
        jPanelTablaInsumosTransformar = new javax.swing.JPanel();
        jPanelRecibo = new javax.swing.JPanel();
        jTextFieldRecibo = MaterialComponentsFactory.Input.getTextField("", "No. Recibo");
        jPanelCancelarConfirmar = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jButtonClose = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonConfirmarEntrada = MaterialComponentsFactory.Buttons.getMaterialButton();

        setMinimumSize(new java.awt.Dimension(750, 900));
        setPreferredSize(new java.awt.Dimension(750, 750));
        setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanelHeader.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 10));
        jPanelHeader.setPreferredSize(new java.awt.Dimension(680, 70));
        jPanelHeader.setLayout(new java.awt.GridLayout(1, 4));

        jPanel12.setOpaque(false);
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jDateChooser1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jDateChooser1.setPreferredSize(new java.awt.Dimension(170, 35));
        jPanel12.add(jDateChooser1);

        jPanelHeader.add(jPanel12);
        jPanelHeader.add(filler4);
        jPanelHeader.add(filler5);

        jPanel1.setOpaque(false);

        jComboBoxOperationSelector.setMaximumRowCount(5);
        jComboBoxOperationSelector.setMaximumSize(new java.awt.Dimension(170, 30));
        jComboBoxOperationSelector.setMinimumSize(new java.awt.Dimension(170, 30));
        jComboBoxOperationSelector.setOpaque(false);
        jComboBoxOperationSelector.setPreferredSize(new java.awt.Dimension(170, 30));
        jComboBoxOperationSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOperationSelectorActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxOperationSelector);

        jPanelHeader.add(jPanel1);

        jPanel7.add(jPanelHeader, java.awt.BorderLayout.NORTH);

        jPaneloperaciones.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10), "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18))); // NOI18N
        jPaneloperaciones.setOpaque(false);
        jPaneloperaciones.setLayout(new java.awt.BorderLayout());

        jPanelInputs.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 20, 5, 20));
        jPanelInputs.setMinimumSize(new java.awt.Dimension(750, 130));
        jPanelInputs.setPreferredSize(new java.awt.Dimension(833, 130));
        jPanelInputs.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanelInsumo.setMaximumSize(new java.awt.Dimension(350, 60));
        jPanelInsumo.setMinimumSize(new java.awt.Dimension(350, 60));
        jPanelInsumo.setPreferredSize(new java.awt.Dimension(350, 60));
        jPanelInsumo.setLayout(new java.awt.BorderLayout());

        jTextFieldInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInsumoActionPerformed(evt);
            }
        });
        jPanelInsumo.add(jTextFieldInsumo, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanelInsumo);

        jPanelCantidad.setMinimumSize(new java.awt.Dimension(200, 60));
        jPanelCantidad.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 15));

        jLabel1.setText("Cantidad");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanelCantidad.add(jLabel1);

        jPanel4.setPreferredSize(new java.awt.Dimension(135, 26));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jSpinnerCantidad.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        jSpinnerCantidad.setMinimumSize(new java.awt.Dimension(100, 26));
        jSpinnerCantidad.setPreferredSize(new java.awt.Dimension(100, 26));
        jSpinnerCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSpinnerCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinnerCantidadKeyTyped(evt);
            }
        });
        jPanel4.add(jSpinnerCantidad, java.awt.BorderLayout.CENTER);

        jLabelUM.setText("<U/M>");
        jPanel4.add(jLabelUM, java.awt.BorderLayout.EAST);

        jPanelCantidad.add(jPanel4);

        jPanel2.add(jPanelCantidad);

        jPanelInputs.add(jPanel2);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanelMontoEntrada.setMaximumSize(new java.awt.Dimension(240, 60));
        jPanelMontoEntrada.setMinimumSize(new java.awt.Dimension(240, 60));
        jPanelMontoEntrada.setPreferredSize(new java.awt.Dimension(240, 50));

        jTextFieldMonto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMontoFocusGained(evt);
            }
        });
        jTextFieldMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMontoActionPerformed(evt);
            }
        });
        jTextFieldMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMontoKeyTyped(evt);
            }
        });
        jPanelMontoEntrada.add(jTextFieldMonto);

        jPanel3.add(jPanelMontoEntrada);

        jPanelDestino.setMaximumSize(new java.awt.Dimension(300, 50));
        jPanelDestino.setMinimumSize(new java.awt.Dimension(300, 50));
        jPanelDestino.setPreferredSize(new java.awt.Dimension(350, 50));
        jPanelDestino.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 15));

        jLabel6.setText("Destino");
        jPanelDestino.add(jLabel6);

        jComboBoxDestino.setMinimumSize(new java.awt.Dimension(250, 26));
        jComboBoxDestino.setPreferredSize(new java.awt.Dimension(250, 26));
        jComboBoxDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDestinoActionPerformed(evt);
            }
        });
        jComboBoxDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxDestinoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBoxDestinoKeyTyped(evt);
            }
        });
        jPanelDestino.add(jComboBoxDestino);

        jPanel3.add(jPanelDestino);

        jPanelRazonRebaja.setMaximumSize(new java.awt.Dimension(300, 50));
        jPanelRazonRebaja.setMinimumSize(new java.awt.Dimension(300, 50));
        jPanelRazonRebaja.setPreferredSize(new java.awt.Dimension(300, 60));
        jPanelRazonRebaja.setLayout(new java.awt.BorderLayout());

        jTextFieldCausaRebaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCausaRebajaActionPerformed(evt);
            }
        });
        jPanelRazonRebaja.add(jTextFieldCausaRebaja, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanelRazonRebaja);

        jPanel5.add(jPanel3, java.awt.BorderLayout.CENTER);

        jButtonAgregarInsumoEntrada.setIcon(MaterialIcons.ADD_CIRCLE_OUTLINE);
        jButtonAgregarInsumoEntrada.setMaximumSize(new java.awt.Dimension(50, 50));
        jButtonAgregarInsumoEntrada.setMinimumSize(new java.awt.Dimension(50, 50));
        jButtonAgregarInsumoEntrada.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonAgregarInsumoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarInsumoEntradaActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonAgregarInsumoEntrada);

        jButtonEliminarInsumoEntrada.setIcon(MaterialIcons.REMOVE_CIRCLE_OUTLINE);
        jButtonEliminarInsumoEntrada.setMaximumSize(new java.awt.Dimension(50, 50));
        jButtonEliminarInsumoEntrada.setMinimumSize(new java.awt.Dimension(50, 50));
        jButtonEliminarInsumoEntrada.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonEliminarInsumoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarInsumoEntradaActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonEliminarInsumoEntrada);

        jPanel5.add(jPanel6, java.awt.BorderLayout.EAST);

        jPanelInputs.add(jPanel5);

        jPaneloperaciones.add(jPanelInputs, java.awt.BorderLayout.NORTH);

        jPanelTablaGeneral.setPreferredSize(new java.awt.Dimension(680, 400));
        jPanelTablaGeneral.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 20, 20));

        jTableEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableEntrada);

        jPanelTablaGeneral.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanelTablas.add(jPanelTablaGeneral);

        jPanelTablaInsumosTransformar.setPreferredSize(new java.awt.Dimension(680, 400));
        jPanelTablaInsumosTransformar.setLayout(new java.awt.BorderLayout());
        jPanelTablas.add(jPanelTablaInsumosTransformar);

        jPaneloperaciones.add(jPanelTablas, java.awt.BorderLayout.CENTER);

        jPanelRecibo.setPreferredSize(new java.awt.Dimension(110, 50));
        jPanelRecibo.setLayout(new java.awt.BorderLayout());

        jTextFieldRecibo.setToolTipText("");
        jTextFieldRecibo.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanelRecibo.add(jTextFieldRecibo, java.awt.BorderLayout.EAST);

        jPaneloperaciones.add(jPanelRecibo, java.awt.BorderLayout.SOUTH);

        jPanel7.add(jPaneloperaciones, java.awt.BorderLayout.CENTER);

        jButtonClose.setText("Cancelar");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanelCancelarConfirmar.add(jButtonClose);

        jButtonConfirmarEntrada.setText("Confirmar");
        jPanelCancelarConfirmar.add(jButtonConfirmarEntrada);

        jPanel7.add(jPanelCancelarConfirmar, java.awt.BorderLayout.SOUTH);

        add(jPanel7, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jTextFieldInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInsumoActionPerformed
        jTextFieldInsumo.transferFocus();
    }//GEN-LAST:event_jTextFieldInsumoActionPerformed

    private void jComboBoxDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDestinoActionPerformed
//        executeAction();
    }//GEN-LAST:event_jComboBoxDestinoActionPerformed

    private void jTextFieldCausaRebajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCausaRebajaActionPerformed
        executeAction();
    }//GEN-LAST:event_jTextFieldCausaRebajaActionPerformed

    private void jButtonAgregarInsumoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarInsumoEntradaActionPerformed
        jTextFieldInsumo.requestFocusInWindow();
    }//GEN-LAST:event_jButtonAgregarInsumoEntradaActionPerformed

    private void jComboBoxOperationSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOperationSelectorActionPerformed
        jTextFieldInsumo.requestFocusInWindow();
    }//GEN-LAST:event_jComboBoxOperationSelectorActionPerformed

    private void jSpinnerCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerCantidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerCantidadKeyTyped

    private void jSpinnerCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerCantidadKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerCantidadKeyPressed

    private void jTextFieldMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMontoActionPerformed
        executeAction();
    }//GEN-LAST:event_jTextFieldMontoActionPerformed

    private void jTextFieldMontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMontoFocusGained
        jTextFieldMonto.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMontoFocusGained

    private void jTextFieldMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMontoKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != '\b') && (c != '.')) {
            evt.consume();
        }
        if ((c == '.') && (jTextFieldMonto.getText().contains("."))) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldMontoKeyTyped

    private void jButtonEliminarInsumoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarInsumoEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEliminarInsumoEntradaActionPerformed

    private void jComboBoxDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxDestinoKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDestinoKeyTyped

    private void jComboBoxDestinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxDestinoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            executeAction();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDestinoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JButton jButtonAgregarInsumoEntrada;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonConfirmarEntrada;
    private javax.swing.JButton jButtonEliminarInsumoEntrada;
    private javax.swing.JComboBox<String> jComboBoxDestino;
    private javax.swing.JComboBox<String> jComboBoxOperationSelector;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelUM;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelCancelarConfirmar;
    private javax.swing.JPanel jPanelCantidad;
    private javax.swing.JPanel jPanelDestino;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelInputs;
    private javax.swing.JPanel jPanelInsumo;
    private javax.swing.JPanel jPanelMontoEntrada;
    private javax.swing.JPanel jPanelRazonRebaja;
    private javax.swing.JPanel jPanelRecibo;
    private javax.swing.JPanel jPanelTablaGeneral;
    private javax.swing.JPanel jPanelTablaInsumosTransformar;
    private javax.swing.JPanel jPanelTablas;
    private javax.swing.JPanel jPaneloperaciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerCantidad;
    private javax.swing.JTable jTableEntrada;
    private javax.swing.JTextField jTextFieldCausaRebaja;
    private javax.swing.JTextField jTextFieldInsumo;
    private javax.swing.JTextField jTextFieldMonto;
    private javax.swing.JTextField jTextFieldRecibo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {
        //COMUNES
        Bindings.bind(jTextFieldRecibo, getPresenter().getModel(PROP_NUMERO_RECIBO));
        Bindings.bind(jDateChooser1, "date", getPresenter().getModel(PROP_FECHA_FACTURA));
        Bindings.bind(jLabelUM, getPresenter().getModel(PROP_UNIDAD_MEDIDA_INSUMO));

        //INPUTS
        autoCompleteModel = new BindableListIntelliHint(
                new SelectionInList<>(getPresenter().getModel(PROP_LISTA_INSUMOS_DISPONIBLES),
                        getPresenter().getModel(PROP_INSUMO_SELECIONADO)), jTextFieldInsumo);
        getPresenter().addBeanPropertyChangeListener(PROP_INSUMO_SELECIONADO, (PropertyChangeEvent evt) -> {
            if (evt.getNewValue() == null) {
                jTextFieldInsumo.setText("");
            }
        });
        SpinnerToValueModelConnector spinnerCantEntrada = new SpinnerToValueModelConnector(jSpinnerCantidad.getModel(),
                getPresenter().getModel(PROP_CANTIDAD_ENTRADA), 0);
        Bindings.bind(jSpinnerCantidad, "value", getPresenter().getModel(PROP_CANTIDAD_ENTRADA));

        Bindings.bind(jTextFieldMonto, getPresenter().getModel(PROP_MONTO_ENTRADA));

        Bindings.bind(jTextFieldCausaRebaja, getPresenter().getModel(PROP_CAUSA_REBAJA));
        Bindings.bind(jTextFieldCausaRebaja, "enabled", getPresenter().getModel(PROP_COMPONENT_LOCKED));

        Bindings.bind(jComboBoxDestino, new SelectionInList<>(
                getPresenter().getModel(PROP_LISTA_DESTINO), getPresenter().getModel(PROP_DESTINO_SELECCIONADO)));
        Bindings.bind(jComboBoxDestino, "enabled", getPresenter().getModel(PROP_COMPONENT_LOCKED));

        //TABLA
        Bindings.bind(jTableEntrada, new SelectionInList<String>(getPresenter().getModel(PROP_LISTA_ELEMENTOS),
                getPresenter().getModel(PROP_ELEMENTO_SELECCIONADO)));

        //BUTTONS
        jButtonAgregarInsumoEntrada.addActionListener(getPresenter().getOperation(ACTION_AGREGAR_INSUMO));
        jButtonEliminarInsumoEntrada.addActionListener(getPresenter().getOperation(ACTION_ELIMINAR_INSUMO));
        jButtonConfirmarEntrada.setAction(getPresenter().getOperation(ACTION_CONFIRMAR_TRANSACCION));
        jButtonClose.setAction(getPresenter().getOperation(ACTION_CERRAR_POPUP));
        jButtonClose.setText("Cancelar");

        //PANEL VISIBILITY
        Bindings.bind(jPanelTablaGeneral, "visible", getPresenter().getModel(PROP_TABLA_GENERAL_ENABLED));
        Bindings.bind(jPanelMontoEntrada, "visible", getPresenter().getModel(PROP_MONTO_ENABLED));
        Bindings.bind(jButtonAgregarInsumoEntrada, "visible", getPresenter().getModel(PROP_BUTTON_AGREGAR_INSUMO_ENABLED));
        Bindings.bind(jButtonEliminarInsumoEntrada, "visible", getPresenter().getModel(PROP_BUTTON_AGREGAR_INSUMO_ENABLED));
        Bindings.bind(jPanelDestino, "visible", getPresenter().getModel(PROP_DESTINO_ENABLED));
        Bindings.bind(jPanelRazonRebaja, "visible", getPresenter().getModel(PROP_RAZON_REBAJA_ENABLED));
        Bindings.bind(jPanelTablaInsumosTransformar, "visible", getPresenter().getModel(PROP_TABLA_INSUMOS_TRANSFORMAR_ENABLED));

        //OPERATIONS SELECTOR
        Bindings.bind(jComboBoxOperationSelector, new SelectionInList<>(
                getPresenter().getModel(PROP_LISTA_OPERACIONES), getPresenter().getModel(PROP_OPERACION_SELECTED)));

        //FOCUS EVENTS
        JSpinner.DefaultEditor defCantidad = (JSpinner.DefaultEditor) jSpinnerCantidad.getEditor();

        defCantidad.getTextField().addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    switch ((CheckBoxType) jComboBoxOperationSelector.getSelectedItem()) {
                        case ENTRADA:
                            if (jTextFieldMonto.isEnabled()) {
                                jTextFieldMonto.requestFocusInWindow();
                            } else {
                                executeAction();
                            }
                            break;
                        case REBAJA:
                            if (jTextFieldCausaRebaja.isEnabled()) {
                                jTextFieldCausaRebaja.requestFocusInWindow();
                            } else {
                                executeAction();
                            }
                            break;
                        case SALIDA:
                            if (jComboBoxDestino.isEnabled()) {
//                                jComboBoxDestino.showPopup();
                                jComboBoxDestino.requestFocusInWindow();
                            } else {
                                executeAction();
                            }
                            break;
                        case TRANSFORMAR:
                            if (jComboBoxDestino.isEnabled()) {
//                                jComboBoxDestino.showPopup();
                                jComboBoxDestino.requestFocusInWindow();
                            } else {
                                executeAction();
                            }
                            break;
                        case TRASPASO:
                            if (jComboBoxDestino.isEnabled()) {
//                                jComboBoxDestino.showPopup();
                                jComboBoxDestino.requestFocusInWindow();
                            } else {
                                executeAction();
                            }
                            break;
                        default:
                            break;
                    }
                }
            }

            @Override
            public void keyTyped(KeyEvent e) {
                if (defCantidad.getTextField().getText().equals("0")) {
                    defCantidad.getTextField().setText(null);
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    @Override
    public void uiInit() {
        initComponents();

        jTableEntrada.setModel(new BindableTableModel<Object>(jTableEntrada) {
            @Override
            public int getColumnCount() {
                return 3;
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Insumo";
                    case 1:
                        return "Cantidad";
                    case 2:
                        return "Monto";
                }
                return null;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return ((TransaccionSimple) getListModel().getElementAt(rowIndex)).getInsumo().getInsumo().getNombre();
                    case 1:
                        return ((TransaccionSimple) getListModel().getElementAt(rowIndex)).getCantidad();
                    case 2:
                        return utils.setDosLugaresDecimalesFloat(((TransaccionSimple) getListModel().getElementAt(rowIndex)).getMonto());
                }
                return null;
            }

        });
        jTableEntrada.getRowSorter().toggleSortOrder(0);
        jTableEntrada.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                    getPresenter().getOperation(ACTION_ELIMINAR_INSUMO).doAction();
                }
            }
        });

        AddFromPanel.AddFromPanelBuilder<TransaccionTransformacion, Insumo> builder = AddFromPanel.builder();

        builder.jTextFieldDataName("Insumos Derivados");
        builder.addAction(getPresenter().getOperation(ACTION_AGREGAR_INSUMO_TRANSFORMADO));
        builder.removeAction(getPresenter().getOperation(ACTION_ELIMINAR_INSUMO_TRANSFORMADO));
        builder.autoCompletitionData(getPresenter().getModel(PROP_LISTA_INSUMO_ELABORADO_DISPONIBLE));
        builder.autoCOmpletitionDataSelection(getPresenter().getModel(PROP_INSUMO_ELABORADO_DISPONIBLE_SELECCIONADO));
        builder.tableDataHolder(getPresenter().getModel(PROP_LISTA_INSUMOS_TRANSFORMADOS_CONTENIDOS));
        builder.tableSelectionDataHolder(getPresenter().getModel(PROP_INSUMO_TRANSFORMADO_CONTENIDO_SELECCIONADO));

        BindableTableModel<TransaccionTransformacion> tableModel
                = new BindableTableModel<TransaccionTransformacion>() {
            @Override
            public int getColumnCount() {
                return 3;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getInsumo().getNombre();
                    case 1:
                        return getRow(rowIndex).getCantidadCreada();
                    case 2:
                        return getRow(rowIndex).getCantidadUsada();
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Insumo";
                    case 1:
                        return "Cantidad creada";
                    case 2:
                        return "Cantidad usada";
                    default:
                        return null;
                }
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return columnIndex > 0;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex > 0 ? Float.class
                        : super.getColumnClass(columnIndex);

            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 1:
                        getRow(rowIndex).setCantidadCreada((float) aValue);
                        break;
                    case 2:
                        getRow(rowIndex).setCantidadUsada((float) aValue);
                        break;
                }
                fireTableCellUpdated(rowIndex, columnIndex);
            }
        };
        builder.tableModel(tableModel);

        tableInsumosTransformados = builder.build();
        jPanelTablaInsumosTransformar.add(tableInsumosTransformados, BorderLayout.CENTER);

    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

    private void executeAction() {
        if (confirm()) {
            getPresenter().getOperation(ACTION_AGREGAR_INSUMO).doAction();
            jTextFieldInsumo.requestFocusInWindow();
        }
    }

    private boolean confirm() {
        Object[] options = {"Si", "No"};
        int confirm = JOptionPane.showOptionDialog(
                Application.getInstance().getMainWindow(),
                "Desea agregar el insumo seleccionado",
                null,
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);

        return confirm == JOptionPane.YES_OPTION;
    }
}
