/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.almacen.ipv;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.list.SelectionInList;
import com.jobits.pos.ui.utils.RestManagerCellRender;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import com.jobits.pos.core.domain.models.Cocina;
import com.jobits.pos.core.domain.models.Insumo;
import com.jobits.pos.core.domain.models.IpvRegistro;
import com.jobits.pos.core.domain.models.IpvVentaRegistro;
import com.jobits.pos.recursos.R;
import com.jobits.pos.ui.AbstractViewPanel;
import static com.jobits.pos.ui.almacen.ipv.presenter.IpvGestionViewModel.*;
import com.jobits.pos.ui.almacen.ipv.presenter.IpvGestionViewPresenter;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.utils.BindableTableModel;
import com.jobits.pos.utils.utils;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.beans.PropertyChangeEvent;

/**
 *
 * @author Jorge
 */
public class IpvGestionView extends AbstractViewPanel {

    public static final String VIEW_NAME = "IPV";

    public IpvGestionView(AbstractViewPresenter presenter) {
        super(presenter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelOpciones = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jPanel8 = new javax.swing.JPanel();
        jComboBoxPtoElabSelec = new javax.swing.JComboBox<>();
        jButtonRefrescar = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanelRegistros = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = MaterialComponentsFactory.Containers.getScrollPane();
        jTableRegistro = new javax.swing.JTable();
        jPanel1 = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jButtonimprimirIpvRegistro = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonDarEntradaIpv = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonEnviarToIPV = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonEnviarToAlmacen = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonAjustarConsumo = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jPanel4 = new javax.swing.JPanel();
        jToggleButtonIpv = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jDateChooserIpv = MaterialComponentsFactory.Input.getDatePicker();
        jPanel3 = new javax.swing.JPanel();
        jPanelIPV = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = MaterialComponentsFactory.Containers.getScrollPane();
        jTableIPV = new javax.swing.JTable();
        jPanel6 = MaterialComponentsFactory.Containers.getPrimaryPanel();
        jButtonImprimirIpv = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonDarEntradaIpvVenta = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonPedido = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jToggleButtonIpvVenta = new javax.swing.JToggleButton();
        jDateChooserIpvVentas = MaterialComponentsFactory.Input.getDatePicker();

        setLayout(new java.awt.BorderLayout());

        jPanelOpciones.setLayout(new java.awt.BorderLayout());

        jPanel8.setOpaque(false);
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        jComboBoxPtoElabSelec.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxPtoElabSelec.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jComboBoxPtoElabSelec.setMinimumSize(new java.awt.Dimension(150, 70));
        jComboBoxPtoElabSelec.setOpaque(false);
        jComboBoxPtoElabSelec.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel8.add(jComboBoxPtoElabSelec);

        jButtonRefrescar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/refrescar_indigo.png"))); // NOI18N
        jButtonRefrescar.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel8.add(jButtonRefrescar);

        jPanelOpciones.add(jPanel8, java.awt.BorderLayout.EAST);

        add(jPanelOpciones, java.awt.BorderLayout.PAGE_START);

        jPanelRegistros.setLayout(new java.awt.BorderLayout(5, 0));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTableRegistro.setAutoCreateRowSorter(true);
        jTableRegistro.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        jTableRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableRegistro.setRowHeight(25);
        jTableRegistro.setRowMargin(4);
        jScrollPane2.setViewportView(jTableRegistro);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanelRegistros.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setOpaque(false);

        jButtonimprimirIpvRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/imprimir_detallado_indigo.png"))); // NOI18N
        jButtonimprimirIpvRegistro.setMnemonic('i');
        jButtonimprimirIpvRegistro.setToolTipText("Imprimir");
        jButtonimprimirIpvRegistro.setBorderPainted(false);
        jPanel1.add(jButtonimprimirIpvRegistro);

        jButtonDarEntradaIpv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/entrada_detallado_indigo.png"))); // NOI18N
        jButtonDarEntradaIpv.setMnemonic('e');
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jButtonDarEntradaIpv.setToolTipText(bundle.getString("label_dar_entada")); // NOI18N
        jButtonDarEntradaIpv.setBorderPainted(false);
        jPanel1.add(jButtonDarEntradaIpv);

        jButtonEnviarToIPV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/enviar_cocina_indigo.png"))); // NOI18N
        jButtonEnviarToIPV.setMnemonic('c');
        jButtonEnviarToIPV.setToolTipText("Enviar a IPV");
        jButtonEnviarToIPV.setBorderPainted(false);
        jPanel1.add(jButtonEnviarToIPV);

        jButtonEnviarToAlmacen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/enviar_almacen_indigo.png"))); // NOI18N
        jButtonEnviarToAlmacen.setMnemonic('c');
        jButtonEnviarToAlmacen.setToolTipText("Enviar a Almacen");
        jButtonEnviarToAlmacen.setBorderPainted(false);
        jPanel1.add(jButtonEnviarToAlmacen);

        jButtonAjustarConsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/estadisticas_indigo.png"))); // NOI18N
        jButtonAjustarConsumo.setMnemonic('a');
        jButtonAjustarConsumo.setToolTipText(bundle.getString("label_ajustar_consumo")); // NOI18N
        jButtonAjustarConsumo.setBorderPainted(false);
        jPanel1.add(jButtonAjustarConsumo);

        jPanelRegistros.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.BorderLayout());

        jToggleButtonIpv.setText(bundle.getString("label_ocultar_insumos_no_utilizados")); // NOI18N
        jPanel4.add(jToggleButtonIpv, java.awt.BorderLayout.WEST);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Fecha");
        jPanel4.add(jLabel3, java.awt.BorderLayout.CENTER);

        jDateChooserIpv.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jDateChooserIpv.setPreferredSize(new java.awt.Dimension(155, 40));
        jPanel4.add(jDateChooserIpv, java.awt.BorderLayout.LINE_END);

        jPanelRegistros.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jTabbedPane2.addTab("Registros Existencias", new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/registro_lapiz.png")), jPanelRegistros, "Ver los registros de IPvs"); // NOI18N

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanelIPV.setLayout(new java.awt.BorderLayout(5, 0));

        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTableIPV.setAutoCreateRowSorter(true);
        jTableIPV.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        jTableIPV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto Venta", "Inicio", "Entrada", "Disponible", "Autorizo", "Venta", "Precio Venta", "Importe", "Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableIPV.setRowHeight(35);
        jTableIPV.setRowMargin(5);
        jScrollPane4.setViewportView(jTableIPV);

        jPanel5.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanelIPV.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setMinimumSize(new java.awt.Dimension(207, 58));

        jButtonImprimirIpv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/imprimir_detallado_indigo.png"))); // NOI18N
        jButtonImprimirIpv.setMnemonic('i');
        jButtonImprimirIpv.setToolTipText("Imprimir");
        jButtonImprimirIpv.setBorderPainted(false);
        jPanel6.add(jButtonImprimirIpv);

        jButtonDarEntradaIpvVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/entrada_detallado_indigo.png"))); // NOI18N
        jButtonDarEntradaIpvVenta.setMnemonic('e');
        jButtonDarEntradaIpvVenta.setToolTipText(bundle.getString("label_dar_entada")); // NOI18N
        jButtonDarEntradaIpvVenta.setBorderPainted(false);
        jPanel6.add(jButtonDarEntradaIpvVenta);

        jButtonPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/icons pack/flechas_indigo.png"))); // NOI18N
        jButtonPedido.setMnemonic('a');
        jButtonPedido.setToolTipText(bundle.getString("label_pedido")); // NOI18N
        jButtonPedido.setBorderPainted(false);
        jPanel6.add(jButtonPedido);

        jPanelIPV.add(jPanel6, java.awt.BorderLayout.PAGE_END);

        jPanel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Fecha");
        jPanel7.add(jLabel2, java.awt.BorderLayout.CENTER);

        jToggleButtonIpvVenta.setText(bundle.getString("label_productos_no_utilizados")); // NOI18N
        jPanel7.add(jToggleButtonIpvVenta, java.awt.BorderLayout.WEST);

        jDateChooserIpvVentas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        jDateChooserIpvVentas.setPreferredSize(new java.awt.Dimension(155, 40));
        jPanel7.add(jDateChooserIpvVentas, java.awt.BorderLayout.LINE_END);

        jPanelIPV.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel3.add(jPanelIPV, java.awt.BorderLayout.CENTER);

        jTabbedPane2.addTab("IPV", jPanel3);

        add(jTabbedPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjustarConsumo;
    private javax.swing.JButton jButtonDarEntradaIpv;
    private javax.swing.JButton jButtonDarEntradaIpvVenta;
    private javax.swing.JButton jButtonEnviarToAlmacen;
    private javax.swing.JButton jButtonEnviarToIPV;
    private javax.swing.JButton jButtonImprimirIpv;
    private javax.swing.JButton jButtonPedido;
    private javax.swing.JButton jButtonRefrescar;
    private javax.swing.JButton jButtonimprimirIpvRegistro;
    private javax.swing.JComboBox<Cocina> jComboBoxPtoElabSelec;
    private org.jdesktop.swingx.JXDatePicker jDateChooserIpv;
    private org.jdesktop.swingx.JXDatePicker jDateChooserIpvVentas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelIPV;
    private javax.swing.JPanel jPanelOpciones;
    private javax.swing.JPanel jPanelRegistros;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableIPV;
    private javax.swing.JTable jTableRegistro;
    private javax.swing.JToggleButton jToggleButtonIpv;
    private javax.swing.JToggleButton jToggleButtonIpvVenta;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {
        Bindings.bind(jToggleButtonIpv, getPresenter().getModel(PROP_CHECK_OCULTAR_PRODUCTOS));
        Bindings.bind(jToggleButtonIpvVenta, getPresenter().getModel(PROP_CHECK_OCULTAR_PRODUCTOS_IPV_VENTA));
        Bindings.bind(jComboBoxPtoElabSelec, new SelectionInList<Cocina>(
                getPresenter().getModel(PROP_LISTA_PUNTO_ELABORACION),
                getPresenter().getModel(PROP_PUNTO_ELABORACION_SELECCIONADO)),
                "Punto Elaboración");
        Bindings.bind(jDateChooserIpv, "date", getPresenter().getModel(PROP_FECHA_SELECCIONADA));
        Bindings.bind(jDateChooserIpvVentas, "date", getPresenter().getModel(PROP_FECHA_IPV_VENTAS_SELECCIONADA));

        Bindings.bind(jTableRegistro, new SelectionInList(
                getPresenter().getModel(PROP_LISTA_IPV_REGISTRO),
                getPresenter().getModel(PROP_IPV_REGISTRO_SELECICONADO)));
        Bindings.bind(jTableIPV, new SelectionInList(
                getPresenter().getModel(PROP_LISTA_IPV_VENTA_REGISTRO),
                getPresenter().getModel(PROP_IPV_VENTA_REGISTRO_SELECCIONADO)));

        jButtonAjustarConsumo.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_AJUSTAR_IPV));
        jButtonDarEntradaIpv.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_DAR_ENTRADA_IPV_REGISTROS));
        jButtonDarEntradaIpvVenta.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_DAR_ENTRADA_IPV_VENTA));
        jButtonImprimirIpv.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_IMPRIMIR_IPV_VENTA_REGISTRO));
        jButtonimprimirIpvRegistro.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_IMPRIMIR_IPV_REGISTRO));
        jButtonPedido.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_NUEVO_PEDIDO_IPV_VENTA));
//        jButtonimprimirIpv.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_IMPRIMIR_IPV_VENTA_REGISTRO));
        jToggleButtonIpv.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_OCULTAR_PRODUCTOS_IPV));
        jToggleButtonIpvVenta.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_OCULTAR_PRODUCTOS_IPV_VENTA));
        jButtonRefrescar.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_CAMBIAR_COCINA));
        jButtonEnviarToIPV.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_ENVIAR_IPV_TO_IPV));
        jButtonEnviarToAlmacen.addActionListener(getPresenter().getOperation(IpvGestionViewPresenter.ACTION_ENVIAR_IPV_TO_ALMACEN));

        getPresenter().addPropertyChangeListener("ImprimirTablaIPVVentaRegistro", (PropertyChangeEvent evt) -> {
            imprimirIPVVentaRegistro();
        });
        getPresenter().addPropertyChangeListener("ImprimirTablaIPVRegistro", (PropertyChangeEvent evt) -> {
            imprimirIPVRegistro();
        });

    }

    @Override
    public void uiInit() {
        initComponents();
        jTableIPV.getTableHeader().setFont(jTableIPV.getFont().deriveFont(Font.BOLD));
        jTableIPV.setDefaultRenderer(Float.class, new RestManagerCellRender());
        jTableRegistro.getTableHeader().setFont(jTableIPV.getFont().deriveFont(Font.BOLD));
        jTableRegistro.setDefaultRenderer(Float.class, new RestManagerCellRender());

        //
        // tabla ipv ventas
        //
        jTableIPV.setModel(new BindableTableModel<IpvVentaRegistro>(jTableIPV) {
            @Override
            public int getColumnCount() {
                return 9;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                //TODO: calcular el total de la tabla y mostrarlo al final

//                if (rowIndex == getRowCount() - 1 && totalRowShowing) {
//                    if (columnIndex == 0) {
//                        return "Total";
//                    }
//                    if (columnIndex == columnTotal) {
//                        return utils.setDosLugaresDecimales(calcularTotal());
//                    }
//                    return null;
//                }
                if (getRowCount() > 0 && !totalRowShowing || getRowCount() > 1 && totalRowShowing) {
                    switch (columnIndex) {
                        case 0:
                            return getRow(rowIndex).getProductoVenta().getNombre();
                        case 1:
                            return getRow(rowIndex).getInicio();
                        case 2:
                            return getRow(rowIndex).getEntrada();
                        case 3:
                            return getRow(rowIndex).getDisponible();
                        case 4:
                            return getRow(rowIndex).getAutorizos();
                        case 5:
                            return getRow(rowIndex).getVenta();
                        case 6:
                            return getRow(rowIndex).getProductoVenta().getPrecioVenta();
                        case 7:
                            return utils.setDosLugaresDecimalesFloat(getRow(rowIndex).getVenta() * getRow(rowIndex).getProductoVenta().getPrecioVenta());
                        case 8:
                            return getRow(rowIndex).getFinal1();
                        default:
                            return null;
                    }
                }
                return null;
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Producto Venta";
                    case 1:
                        return "Inicio";
                    case 2:
                        return "Entrada";
                    case 3:
                        return "Disponible";
                    case 4:
                        return "Autorizo";
                    case 5:
                        return "Venta";
                    case 6:
                        return "Precio Venta (" + R.COIN_SUFFIX.substring(1) + ")";
                    case 7:
                        return "Importe (" + R.COIN_SUFFIX.substring(1) + ")";
                    case 8:
                        return "Final";
                    default:
                        return null;
                }
            }

            //TODO: calcular el total de la tabla y mostrarlo al final
//            @Override
//            protected float calcularTotal() {
//                float total = 0;
//                if (totalRowShowing) {
//                    for (IpvVentaRegistro i : items) {
//                        total += i.getVendidos() * i.getProductoVenta().getPrecioVenta();
//                    }
//                }
//                return total;
//           }
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return String.class;
                    default:
                        return Float.class;
                }
            }
        }
        );
        jTableIPV.getRowSorter().toggleSortOrder(0);
        jTableIPV.getColumnModel().getColumn(0).setPreferredWidth(250);
//  ((RestManagerAbstractTableModel<IpvVentaRegistro>) jTableIPV.getModel()).addTotalRow(7);

        //
        // Tabla Ipv
        //
        jTableRegistro.setModel(new BindableTableModel<IpvRegistro>(jTableRegistro) {
            @Override
            public int getColumnCount() {
                return 8;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getIpv().getInsumo();
                    case 1:
                        return getRow(rowIndex).getInicio();
                    case 2:
                        return getRow(rowIndex).getEntrada();
                    case 3:
                        return getRow(rowIndex).getDisponible();
                    case 4:
                        return getRow(rowIndex).getConsumo();
                    case 5:
                        return getRow(rowIndex).getConsumoReal();
                    case 6:
                        return getRow(rowIndex).getFinalCalculado();
                    case 7:
                        return utils.setDosLugaresDecimalesFloat(
                                getRow(rowIndex).getFinalCalculado()
                                * getRow(rowIndex).getIpv().getInsumo().getCostoPorUnidad());
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Insumo";
                    case 1:
                        return "Inicio";
                    case 2:
                        return "Entrada";
                    case 3:
                        return "Disponible";
                    case 4:
                        return "Consumo";
                    case 5:
                        return "Consumo Real";
                    case 6:
                        return "Final";
                    case 7:
                        return "Importe (" + R.COIN_SUFFIX.substring(1) + ")";
                    default:
                        return null;
                }
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 1:
                        return Insumo.class;
                    default:
                        return Float.class;
                }
            }
        });
        jTableRegistro.getRowSorter().toggleSortOrder(0);
        jTableRegistro.getColumnModel().getColumn(0).setPreferredWidth(250);
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

    private void imprimirIPVRegistro() {
        MessageFormat footer = new MessageFormat("-Pag {0}-");
        MessageFormat header = new MessageFormat("IPV " + jComboBoxPtoElabSelec.getSelectedItem().toString() + " Dia " + R.DATE_FORMAT.format(jDateChooserIpv.getDate()));
        try {
            jTableRegistro.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(IpvGestionView.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void imprimirIPVVentaRegistro() {
        MessageFormat footer = new MessageFormat("Entregado por                  Recibido por                  Revisado por");
        MessageFormat header = new MessageFormat("IPV " + jComboBoxPtoElabSelec.getSelectedItem().toString() + " Dia " + R.DATE_FORMAT.format(jDateChooserIpv.getDate()));
        try {
            jTableIPV.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(IpvGestionView.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

}
