/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui;

import com.jobits.pos.ui.statusbar.StatusBarView;
import com.jobits.pos.ui.statusbar.StatusBarPresenter;
import com.jobits.pos.ui.mainmenu.MainMenuView;
import com.jobits.pos.ui.mainmenu.presenter.MainMenuPresenter;
import com.jobits.pos.controller.login.MainMenuController;
import com.jobits.pos.cordinator.DisplayType;
import com.jobits.pos.main.ViewFacade;

import com.jobits.pos.ui.dashboard.DashBoardView;
import com.jobits.pos.ui.login.LogInView;
import com.jobits.pos.ui.login.UbicacionView;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.productos.ProductoVentaDetailView;
import com.jobits.pos.ui.utils.PopUpDialog;
import com.jobits.pos.ui.venta.orden.OrdenDetailFragmentView;
import com.jobits.pos.ui.venta.VentaDetailView;

import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.BorderLayout;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;

/**
 *
 * @author Jorge
 */
public class RootView extends JPanel {

    public static String VIEW_NAME = "Root View";

    private MainMenuView dashboard;

    private StatusBarView statusBar = new StatusBarView(new StatusBarPresenter());

    private String currentDisplayedViewName;

    private Map<String, View> views = new HashMap<>();

    private static RootView instance;

    private boolean statusBarVisibility = true;

    /**
     * Creates new form RootView
     */
    private RootView() {
        super();
        initComponents();
        // jPanelContent.setLayout(cards);
        jPanelStatus.add(statusBar);
        dashboard = new MainMenuView(new MainMenuPresenter(new MainMenuController()));
        add(dashboard, BorderLayout.CENTER);
        setShrinked(true);
        statusBar.refreshView();

    }

    public static RootView getInstance() {
        if (instance == null) {
            instance = new RootView();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings(value = "unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader = MaterialComponentsFactory.Containers.getHeaderPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelStatus = MaterialComponentsFactory.Containers.getPrimaryPanel();

        jPanelHeader.setOpaque(false);
        jPanelHeader.setPreferredSize(new java.awt.Dimension(120, 80));
        jPanelHeader.setLayout(new java.awt.BorderLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jPanelHeader.add(jPanel1, java.awt.BorderLayout.WEST);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/logo/banner.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(180, 96));
        jLabel1.setMinimumSize(new java.awt.Dimension(40, 40));
        jLabel1.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanelHeader.add(jLabel1, java.awt.BorderLayout.CENTER);

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        setLayout(new java.awt.BorderLayout());

        jPanelStatus.setMaximumSize(new java.awt.Dimension(2147483647, 15));
        jPanelStatus.setMinimumSize(new java.awt.Dimension(5, 15));
        jPanelStatus.setPreferredSize(new java.awt.Dimension(5, 15));
        jPanelStatus.setLayout(new java.awt.BorderLayout());
        add(jPanelStatus, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelStatus;
    // End of variables declaration//GEN-END:variables

    private void addView(View view) {
        views.put(view.getViewName(), view);
        dashboard.getTaskPane().addView(view.getViewName(), view.getViewComponent());
    }

    //TODO: asco de metodo. arreglar
    public boolean showView(String viewNameToDisplay, AbstractViewPresenter presenter, DisplayType displayType) {//TODO trabjar en los popup

        //Caso especial para las ordenes
//        if (viewNameToDisplay.equals(OrdenDetailFragmentView.VIEW_NAME)) {
//            View v = views.get(currentDisplayedViewName);
//            if (v == null) {
//                throw new IllegalArgumentException("Bad call on OrdenView when there is none displayed view");
//            }
//            if (v instanceof VentaDetailView) {
//                // ((VentaDetailView) v).addOrdenView((OrdenDetailFragmentView) ViewFacade.getView(OrdenDetailFragmentView.VIEW_NAME, presenter));
//                return false;
//            }
//            throw new IllegalStateException("Bad call to ordenView when  " + v.getClass().getName() + " is active");
//
//        }
//        View v = views.get(viewNameToDisplay);
//        if (v instanceof VentaDetailView) {
        if (viewNameToDisplay.equals(VentaDetailView.VIEW_NAME)) {
            views.remove(viewNameToDisplay);
        }
//        }

//        views.clear();//TODO: Usar otra via para actulizar las vistas
        //primero ver si esta guardada la vista para mostrar
        if (!views.containsKey(viewNameToDisplay)) {
            //trAtamiento especial para el menu principal
            if (viewNameToDisplay.equals(MainMenuView.VIEW_NAME)) {
                viewNameToDisplay = DashBoardView.VIEW_NAME;//TODO: cuando se vuelva a la ventana de loggeo vaciar el usuario loggeado en la app
            } else {
//                views.clear();//TODO: Usar otra via para actulizar las vistas
//                v = views.get(viewNameToDisplay);
                if (viewNameToDisplay.equals(VentaDetailView.VIEW_NAME)) {
                    views.remove(viewNameToDisplay);
                }
                addView(ViewFacade.getView(viewNameToDisplay, presenter));
            }
            //tratamiento si la vista es nuevala vista es nueva
        }
        //se vuelve a agregar la vista
        currentDisplayedViewName = viewNameToDisplay;
        //se decide si agregar el header y footer
        boolean displayAggregatesViews = !(currentDisplayedViewName.equals(LogInView.VIEW_NAME)
                || currentDisplayedViewName.equals(UbicacionView.VIEW_NAME));
        //jPanelHeader.setVisible(!currentDisplayedViewName.equals(LogInView.VIEW_NAME));
        jPanelStatus.setVisible(displayAggregatesViews);
        jPanelStatus.setVisible(statusBarVisibility);
        dashboard.getTaskPane().showView(currentDisplayedViewName);
        dashboard.getTaskPane().repaint();

        return true;

    }

    public String getCurrentViewName(String name) {
        return currentDisplayedViewName;
    }

    public void setShrinked(boolean shrink) {
        dashboard.getCollapse().setCollapsed(shrink);
    }

    public MainMenuView getDashboard() {
        return dashboard;
    }

    public JPanel getjPanelStatus() {
        return jPanelStatus;
    }

    public boolean isStatusBarVisibility() {
        return statusBarVisibility;
    }

    public void setStatusBarVisibility(boolean statusBarVisibility) {
        this.statusBarVisibility = statusBarVisibility;
    }

    public StatusBarView getStatusBar() {
        return statusBar;
    }

}
