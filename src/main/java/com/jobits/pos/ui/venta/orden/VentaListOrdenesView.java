/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.venta.orden;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.list.SelectionInList;
import com.jhw.swing.material.standars.MaterialIcons;
import com.jobits.pos.domain.models.Orden;
import com.jobits.pos.ui.AbstractViewPanel;
import static com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewPresenter.*;
import static com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewModel.*;
import com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewPresenter;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.BorderLayout;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Jorge
 */
public class VentaListOrdenesView extends AbstractViewPanel {

    public static final String VIEW_NAME = "Lista Ordenes";

    public VentaListOrdenesView(VentaOrdenListViewPresenter ventaPresenter) {
        super(ventaPresenter);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCalcCAmbio = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jPanelOrdenesActivas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonEnviarCerrarCrearNueva = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonCheckReservas = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonNuevaOrden = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListOrdenesActivas = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        jButtonCalcCAmbio.setIcon(MaterialIcons.REPEAT);
        jButtonCalcCAmbio.setToolTipText("Calcular Cambio");
        jButtonCalcCAmbio.setEnabled(false);
        jButtonCalcCAmbio.setPreferredSize(new java.awt.Dimension(50, 50));

        setLayout(new java.awt.BorderLayout());

        jPanelOrdenesActivas.setMaximumSize(new java.awt.Dimension(300, 300));
        jPanelOrdenesActivas.setPreferredSize(new java.awt.Dimension(300, 438));
        jPanelOrdenesActivas.setLayout(new java.awt.BorderLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(200, 190));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 190));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 3));

        jButtonEnviarCerrarCrearNueva.setIcon(MaterialIcons.SHOPPING_CART);
        jButtonEnviarCerrarCrearNueva.setMnemonic('r');
        jButtonEnviarCerrarCrearNueva.setToolTipText("Cerrado Rapido");
        jButtonEnviarCerrarCrearNueva.setEnabled(false);
        jButtonEnviarCerrarCrearNueva.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel3.add(jButtonEnviarCerrarCrearNueva);

        jButtonCheckReservas.setIcon(MaterialIcons.SEARCH);
        jButtonCheckReservas.setToolTipText("Buscar Reservaciones");
        jButtonCheckReservas.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel3.add(jButtonCheckReservas);

        jButtonNuevaOrden.setIcon(MaterialIcons.ADD_CIRCLE);
        jButtonNuevaOrden.setToolTipText("Agregar");
        jButtonNuevaOrden.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel3.add(jButtonNuevaOrden);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jListOrdenesActivas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListOrdenesActivas);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanelOrdenesActivas.add(jPanel1, java.awt.BorderLayout.WEST);

        jScrollPane2.setHorizontalScrollBar(null);

        jPanel2.setLayout(new java.awt.BorderLayout());
        jScrollPane2.setViewportView(jPanel2);

        jPanelOrdenesActivas.add(jScrollPane2, java.awt.BorderLayout.EAST);

        add(jPanelOrdenesActivas, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcCAmbio;
    private javax.swing.JButton jButtonCheckReservas;
    private javax.swing.JButton jButtonEnviarCerrarCrearNueva;
    private javax.swing.JButton jButtonNuevaOrden;
    private javax.swing.JList<Orden> jListOrdenesActivas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelOrdenesActivas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {
        jButtonNuevaOrden.addActionListener(getPresenter().getOperation(ACTION_CREAR_ORDEN));
        jButtonCheckReservas.addActionListener(getPresenter().getOperation(ACTION_ABRIR_RESERVA));
        Bindings.bind(jListOrdenesActivas, new SelectionInList<Orden>(getPresenter().getModel(PROP_LISTA_ELEMENTOS), getPresenter().getModel(PROP_ELEMENTO_SELECCIONADO)));
        jListOrdenesActivas.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    getPresenter().getOperation(ACTION_ABRIR_ORDEN).doAction();
                }
            }
        });
    }

    @Override
    public VentaOrdenListViewPresenter getPresenter() {
        return (VentaOrdenListViewPresenter) super.getPresenter(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void uiInit() {
        initComponents();
        jListOrdenesActivas.setCellRenderer(new ListCellRenderer<Orden>() {
            @Override
            public Component getListCellRendererComponent(JList<? extends Orden> list, Orden value, int index, boolean isSelected, boolean cellHasFocus) {
                return new CellRenderOrden(value, isSelected);
            }

        });
        if (getPresenter().getOrdenPresenter() != null) {
            jPanel2.add(new PedidoCardView(getPresenter().getOrdenPresenter()), BorderLayout.EAST);
        }
        jPanelOrdenesActivas.add(new ProductoVentaSelectorView(getPresenter().getMenuPresenter()), BorderLayout.CENTER);
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

//    private void populatePedidosPanel() {
//        for (OrdenDetailViewPresenter x : getPresenter().getOrdenPresenter()) {
//            PedidoCardView newView = new PedidoCardView(x);
//            jPanel2.add(newView);
//        }
//    }
}
