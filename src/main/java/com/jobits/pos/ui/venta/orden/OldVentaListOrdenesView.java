
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.venta.orden;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.list.SelectionInList;
import com.jobits.pos.core.domain.models.Orden;
import com.jobits.pos.recursos.R;
import com.jobits.pos.ui.AbstractViewPanel;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.swing.utils.BindableTableModel;
import com.jobits.pos.ui.utils.StateCellRender;
import com.jobits.pos.ui.utils.TableColumnAdjuster;
import static com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewPresenter.*;
import static com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewModel.*;
import com.jobits.pos.ui.venta.orden.presenter.VentaOrdenListViewPresenter;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.awt.BorderLayout;
import java.awt.Container;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author Jorge
 */
public class OldVentaListOrdenesView extends AbstractViewPanel {

    public static final String VIEW_NAME = "Lista Ordenes";

    OrdenDetailFragmentView ordenDetailView;

    public OldVentaListOrdenesView(VentaOrdenListViewPresenter ventaPresenter) {
        super(ventaPresenter);
        //  addOrdenView(new OrdenDetailFragmentView(ventaPresenter.getOrdenPresenter()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelOrdenesActivas = new javax.swing.JPanel();
        jXPanelOrdenControl = new org.jdesktop.swingx.JXPanel();
        jButtonNuevaOrden = new javax.swing.JButton();
        jButtonCalcCAmbio = new javax.swing.JButton();
        jButtonEnviarCerrarCrearNueva = new javax.swing.JButton();
        jScrollPane2 = MaterialComponentsFactory.Containers.getScrollPane();
        jXTableOrdActivas = new org.jdesktop.swingx.JXTable();
        jPanelDetailOrdenes = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanelOrdenesActivas.setMaximumSize(new java.awt.Dimension(300, 300));
        jPanelOrdenesActivas.setPreferredSize(new java.awt.Dimension(300, 438));
        jPanelOrdenesActivas.setLayout(new java.awt.BorderLayout());

        jXPanelOrdenControl.setBackground(new java.awt.Color(204, 204, 204));
        jXPanelOrdenControl.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));
        jXPanelOrdenControl.setMaximumSize(new java.awt.Dimension(300, 300));
        jXPanelOrdenControl.setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Strings"); // NOI18N
        jButtonNuevaOrden.setText(bundle.getString("label_agregar")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jXPanelOrdenControl.add(jButtonNuevaOrden, gridBagConstraints);

        jButtonCalcCAmbio.setText(bundle.getString("label_calcular_cambio")); // NOI18N
        jButtonCalcCAmbio.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jXPanelOrdenControl.add(jButtonCalcCAmbio, gridBagConstraints);

        jButtonEnviarCerrarCrearNueva.setMnemonic('r');
        jButtonEnviarCerrarCrearNueva.setText("Cerrado Rapido");
        jButtonEnviarCerrarCrearNueva.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jXPanelOrdenControl.add(jButtonEnviarCerrarCrearNueva, gridBagConstraints);

        jPanelOrdenesActivas.add(jXPanelOrdenControl, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(300, 32767));

        jXTableOrdActivas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jXTableOrdActivas.setAutoResizeMode(4);
        jXTableOrdActivas.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jScrollPane2.setViewportView(jXTableOrdActivas);

        jPanelOrdenesActivas.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(jPanelOrdenesActivas, java.awt.BorderLayout.WEST);

        jPanelDetailOrdenes.setLayout(new java.awt.BorderLayout());
        add(jPanelDetailOrdenes, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcCAmbio;
    private javax.swing.JButton jButtonEnviarCerrarCrearNueva;
    private javax.swing.JButton jButtonNuevaOrden;
    private javax.swing.JPanel jPanelDetailOrdenes;
    private javax.swing.JPanel jPanelOrdenesActivas;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXPanel jXPanelOrdenControl;
    private org.jdesktop.swingx.JXTable jXTableOrdActivas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void wireUp() {
        //Ventas
        Bindings.bind(jXTableOrdActivas,
                new SelectionInList<Orden>(
                        getPresenter().getModel(PROP_LISTA_ELEMENTOS),
                        getPresenter().getModel(PROP_ELEMENTO_SELECCIONADO)));
        jXTableOrdActivas.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting() && jXTableOrdActivas.getSelectedRow() != -1) {
                getPresenter().getOperation(ACTION_ABRIR_ORDEN).doAction();
            }
        });
        jButtonNuevaOrden.addActionListener(getPresenter().getOperation(ACTION_ABRIR_ORDEN));
    }

    @Override
    public void uiInit() {
        initComponents();
        TableColumnAdjuster adj = new TableColumnAdjuster(jXTableOrdActivas);
        adj.setDynamicAdjustment(true);
        BindableTableModel<Orden> modelOrd
                = new BindableTableModel<Orden>(jXTableOrdActivas) {
            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getCodOrden();
                    case 1:
                        if (getRow(rowIndex).getMesacodMesa() != null) {
                            return getRow(rowIndex).getMesacodMesa().getCodMesa();
                        }
                        return "-";
                    case 2:
                        return getRow(rowIndex).getOrdenvalorMonetario() + R.COIN_SUFFIX;
                    case 3:
                        return getRow(rowIndex);
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Codigo Orden";
                    case 1:
                        return "Mesa";
                    case 2:
                        return "Valor Total";
                    case 3:
                        return "Estados";
                    default:
                        return null;

                }
            }
        };
        jXTableOrdActivas.setModel(modelOrd);
        jXTableOrdActivas.getColumn(3).setCellRenderer(new StateCellRender<Orden>() {
            @Override
            public void processData(Orden object, Container root) {
                if (object.getDeLaCasa()) {
                    root.add(getjState1());
                }
                if (object.getHoraTerminada() != null) {
                    root.add(getjState2());
                }
                if (object.getPorciento() != 0) {
                    root.add(getJstate3());
                }
            }
        });
        jXTableOrdActivas.setRowHeight(40);
        adj.adjustColumns();
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

    public void addOrdenView(OrdenDetailFragmentView view) {
        if (jPanelDetailOrdenes.getComponentCount() == 0) {
            jPanelDetailOrdenes.add(view, BorderLayout.CENTER);
        }
        // repaint();
    }
}
