/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.reserva;

import com.jobits.pos.ui.reserva.ubicaciones.UbicacionDetailView;
import com.jobits.pos.ui.reserva.ubicaciones.CategoriaDetailView;
import com.jgoodies.binding.adapter.Bindings;
import com.jobits.pos.ui.reserva.util.CustomComponentFactory;
import com.jhw.swing.material.standars.MaterialIcons;
import com.jobits.pos.cordinator.DisplayType;
import com.jobits.pos.main.Application;
import com.jobits.pos.reserva.core.domain.Categoria;
import com.jobits.pos.reserva.core.domain.Reserva;
import com.jobits.pos.reserva.core.domain.Ubicacion;
import com.jobits.pos.ui.AbstractViewPanel;
import com.jobits.pos.ui.reserva.model.ReservaWrapper;
import com.jobits.pos.ui.reserva.util.AppointmentListener;
import com.jobits.pos.ui.reserva.model.ScheduleModel;
import com.jobits.pos.ui.reserva.model.UbicacionWrapper;
import com.jobits.pos.ui.reserva.ubicaciones.presenter.CategoriaDetailViewPresenter;
import com.jobits.pos.ui.reserva.presenter.ReservaDetailViewPresenter;
import com.jobits.pos.ui.reserva.presenter.ReservaSchedulerViewModel;
import com.jobits.pos.ui.reserva.presenter.ReservaSchedulerViewPresenter;
import com.jobits.pos.ui.reserva.ubicaciones.CategoriasListView;
import com.jobits.pos.ui.reserva.ubicaciones.UbicacionesListView;
import com.jobits.pos.ui.reserva.ubicaciones.presenter.CategoriaListViewPresenter;
import com.jobits.pos.ui.reserva.ubicaciones.presenter.UbicacionDetailViewPresenter;
import com.jobits.pos.ui.reserva.ubicaciones.presenter.UbicacionesListViewPresenter;
import com.jobits.ui.scheduler.Appointment;
import com.jobits.ui.scheduler.Resource;
import com.jobits.ui.components.MaterialComponentsFactory;
import java.beans.PropertyChangeEvent;
import java.time.LocalDateTime;

/**
 *
 * @author Home
 */
public class ReservaSchedulerView extends AbstractViewPanel {

    public static final String VIEW_NAME = "Reservas";

    private ScheduleModel model;

    /**
     * Creates new form ReservaSchedulerView
     *
     * @param presenter
     */
    public ReservaSchedulerView(ReservaSchedulerViewPresenter presenter) {
        super(presenter);
    }

    private void handleAppointmentClick(Appointment appointment) {
//        Application.getInstance().getNotificationService().notify("Click " + appointment.getTitle(), TipoNotificacion.SUCCESS);
    }

    private void handleAppointmentEdit(Appointment appointment) {
        Reserva reserva = ((ReservaWrapper) appointment).getReserva();
        Application.getInstance().getNavigator().navigateTo(
                ReservasDetailView.VIEW_NAME, new ReservaDetailViewPresenter(reserva), DisplayType.POPUP);
    }

    private void handleAddAppointment(Resource resource, LocalDateTime time) {
//        Availability a = resource.getAvailability(time.toLocalDate()).next();
        Ubicacion u = ((UbicacionWrapper) resource).getUbicacion();
        Reserva reserva = new Reserva(time.toLocalDate(), time.toLocalTime(), 30, u); // 6 pm
        Application.getInstance().getNavigator().navigateTo(
                ReservasDetailView.VIEW_NAME, new ReservaDetailViewPresenter(reserva), DisplayType.POPUP);
//        addTestReserva(resource, time);
//        Application.getInstance().getNotificationService().notify("Edit " + resource.getTitle(), TipoNotificacion.SUCCESS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanelSeleccion = new javax.swing.JPanel();
        jPanelPeriodo = new javax.swing.JPanel();
        jButtonPeriodoSelector = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabelPeriodoActual = new javax.swing.JLabel();
        jPanelPeriodChooser = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jDateChooserDateToShow = new org.jdesktop.swingx.JXDatePicker();
        jPanel9 = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelCurrentIndex = new javax.swing.JLabel();
        jLabelLine = new javax.swing.JLabel();
        jLabelTotalIndexes = new javax.swing.JLabel();
        jButtonNext = new javax.swing.JButton();
        jPanelOpciones = new javax.swing.JPanel();
        jButtonRestablecer = MaterialComponentsFactory.Buttons.getMaterialButton();
        jButton1 = new javax.swing.JButton();
        jPanelDetails = new javax.swing.JPanel();
        jPanelMainScheduler = new javax.swing.JPanel();
        scheduler = new com.jobits.ui.scheduler.Scheduler();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        jPanel2.setLayout(new java.awt.GridLayout(4, 2));

        jLabel1.setText("jLabel1");
        jPanel2.add(jLabel1);

        jTextField1.setText("jTextField1");
        jPanel2.add(jTextField1);

        jLabel2.setText("jLabel2");
        jPanel2.add(jLabel2);

        jTextField2.setText("jTextField2");
        jPanel2.add(jTextField2);

        jLabel3.setText("jLabel3");
        jPanel2.add(jLabel3);

        jTextField3.setText("jTextField3");
        jPanel2.add(jTextField3);

        jLabel4.setText("jLabel4");
        jPanel2.add(jLabel4);

        jTextField4.setText("jTextField4");
        jPanel2.add(jTextField4);

        setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanelSeleccion.setBorder(new org.pushingpixels.lafwidget.utils.ShadowPopupBorder());
        jPanelSeleccion.setLayout(new java.awt.BorderLayout());

        jPanelPeriodo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        jPanelPeriodo.setPreferredSize(new java.awt.Dimension(320, 50));
        jPanelPeriodo.setLayout(new java.awt.BorderLayout());

        jButtonPeriodoSelector.setIcon(MaterialIcons.ARROW_DROP_RIGHT);
        jButtonPeriodoSelector.setPreferredSize(new java.awt.Dimension(40, 32));
        jPanelPeriodo.add(jButtonPeriodoSelector, java.awt.BorderLayout.EAST);

        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 0, 0, 0));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabelPeriodoActual.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabelPeriodoActual.setText("De :");
        jLabelPeriodoActual.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jLabelPeriodoActualPropertyChange(evt);
            }
        });
        jPanel5.add(jLabelPeriodoActual, java.awt.BorderLayout.CENTER);

        jPanelPeriodo.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanelSeleccion.add(jPanelPeriodo, java.awt.BorderLayout.WEST);

        jPanelPeriodChooser.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 10, 0));
        jPanelPeriodChooser.setPreferredSize(new java.awt.Dimension(200, 50));
        jPanelPeriodChooser.setLayout(new java.awt.GridLayout(1, 3));

        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        jPanel8.setMinimumSize(new java.awt.Dimension(254, 20));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jDateChooserDateToShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDateChooserDateToShowActionPerformed(evt);
            }
        });
        jPanel8.add(jDateChooserDateToShow);

        jPanelPeriodChooser.add(jPanel8);

        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jButtonBack.setIcon(MaterialIcons.ARROW_BACK);
        jButtonBack.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel9.add(jButtonBack, java.awt.BorderLayout.WEST);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelCurrentIndex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCurrentIndex.setText("X");
        jLabelCurrentIndex.setMaximumSize(new java.awt.Dimension(20, 16));
        jLabelCurrentIndex.setMinimumSize(new java.awt.Dimension(20, 16));
        jLabelCurrentIndex.setPreferredSize(new java.awt.Dimension(20, 16));
        jPanel1.add(jLabelCurrentIndex, new java.awt.GridBagConstraints());

        jLabelLine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLine.setText("-");
        jLabelLine.setMaximumSize(new java.awt.Dimension(20, 16));
        jLabelLine.setMinimumSize(new java.awt.Dimension(20, 16));
        jLabelLine.setPreferredSize(new java.awt.Dimension(20, 16));
        jPanel1.add(jLabelLine, new java.awt.GridBagConstraints());

        jLabelTotalIndexes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTotalIndexes.setText("X");
        jLabelTotalIndexes.setMaximumSize(new java.awt.Dimension(20, 16));
        jLabelTotalIndexes.setMinimumSize(new java.awt.Dimension(20, 16));
        jLabelTotalIndexes.setPreferredSize(new java.awt.Dimension(20, 16));
        jPanel1.add(jLabelTotalIndexes, new java.awt.GridBagConstraints());

        jPanel9.add(jPanel1, java.awt.BorderLayout.CENTER);

        jButtonNext.setIcon(MaterialIcons.ARROW_FORWARD);
        jButtonNext.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel9.add(jButtonNext, java.awt.BorderLayout.EAST);

        jPanelPeriodChooser.add(jPanel9);

        jPanelSeleccion.add(jPanelPeriodChooser, java.awt.BorderLayout.CENTER);

        jPanelOpciones.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanelOpciones.setPreferredSize(new java.awt.Dimension(110, 50));
        jPanelOpciones.setLayout(new java.awt.GridLayout(1, 2, 5, 1));

        jButtonRestablecer.setText("Ubic");
        jButtonRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestablecerActionPerformed(evt);
            }
        });
        jPanelOpciones.add(jButtonRestablecer);

        jButton1.setText("Cat");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanelOpciones.add(jButton1);

        jPanelSeleccion.add(jPanelOpciones, java.awt.BorderLayout.EAST);

        jPanel3.add(jPanelSeleccion, java.awt.BorderLayout.NORTH);

        jPanelDetails.setLayout(new java.awt.BorderLayout());
        jPanel3.add(jPanelDetails, java.awt.BorderLayout.WEST);

        jPanelMainScheduler.setLayout(new java.awt.BorderLayout());
        jPanelMainScheduler.add(scheduler, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanelMainScheduler, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Reservas", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.add(new UbicacionesListView(new UbicacionesListViewPresenter()));

        jTabbedPane1.addTab("Ubicaciones", jPanel4);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel6.add(new CategoriasListView(new CategoriaListViewPresenter()));

        jTabbedPane1.addTab("Categorias", jPanel6);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelPeriodoActualPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jLabelPeriodoActualPropertyChange
    }//GEN-LAST:event_jLabelPeriodoActualPropertyChange

    private void jDateChooserDateToShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDateChooserDateToShowActionPerformed
    }//GEN-LAST:event_jDateChooserDateToShowActionPerformed

    private void jButtonRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestablecerActionPerformed
        Application.getInstance().getNavigator().navigateTo(
                UbicacionDetailView.VIEW_NAME, new UbicacionDetailViewPresenter(new Ubicacion(), true), DisplayType.POPUP);
    }//GEN-LAST:event_jButtonRestablecerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Application.getInstance().getNavigator().navigateTo(
                CategoriaDetailView.VIEW_NAME, new CategoriaDetailViewPresenter(new Categoria(), true), DisplayType.POPUP);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPeriodoSelector;
    private javax.swing.JButton jButtonRestablecer;
    private org.jdesktop.swingx.JXDatePicker jDateChooserDateToShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelCurrentIndex;
    private javax.swing.JLabel jLabelLine;
    private javax.swing.JLabel jLabelPeriodoActual;
    private javax.swing.JLabel jLabelTotalIndexes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelDetails;
    private javax.swing.JPanel jPanelMainScheduler;
    private javax.swing.JPanel jPanelOpciones;
    private javax.swing.JPanel jPanelPeriodChooser;
    private javax.swing.JPanel jPanelPeriodo;
    private javax.swing.JPanel jPanelSeleccion;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private com.jobits.ui.scheduler.Scheduler scheduler;
    // End of variables declaration//GEN-END:variables

    //TODO: borrar despues de probar
//    private void addTestData() {
//        // Resources
//        Resource ra = new UbicacionWrapper(new Ubicacion("Carlos", LocalTime.of(8, 0, 0), LocalTime.of(18, 0, 0)));
//        Resource rb = new UbicacionWrapper(new Ubicacion("ALberto", LocalTime.of(8, 0, 0), LocalTime.of(18, 0, 0)));
//        Resource rc = new UbicacionWrapper(new Ubicacion("Juan", LocalTime.of(8, 0, 0), LocalTime.of(18, 0, 0)));
//
//        // Our categories for our appointments
//        Category Green = new CategoriaWrapper(new Categoria("Green", new Color(9, 246, 76, 200).getRGB()));
//        Category Blue = new CategoriaWrapper(new Categoria("Blue", new Color(9, 171, 246, 200).getRGB()));
//
//        model.addResource(ra, model.getDate(), -1);
//        model.addResource(rb, model.getDate(), -1);
//        model.addResource(rc, model.getDate(), -1);
//
//        model.addCategory(Blue);
//        model.addCategory(Green);
//
//        addTestReserva(lista_ubicaciones.get(0), LocalDateTime.of(model.getDate(), LocalTime.of(5, 30)));
//    }
//    private void addTestReserva(Resource resource, LocalDateTime time) {
//        Availability a = resource.getAvailability(time.toLocalDate()).next();
//        Ubicacion u = new Ubicacion(resource.getTitle(), a.getTime(), a.getTime().plus(a.getDuration()));
//        Reserva r = new Reserva(time.toLocalDate(), time.toLocalTime(), 30, u); // 6 pm
//        r.setNotasreserva("Clases a erick");
//        ReservaWrapper wrapper = new ReservaWrapper(r,
//                new CategoriaWrapper(new Categoria("Green",
//                        new Color(9, 246, 76, 200).getRGB())), resource);
//        model.addAppointment(wrapper);
//
//    }
    @Override
    public void wireUp() {
        Bindings.bind(jDateChooserDateToShow, "date", getPresenter().getModel(ReservaSchedulerViewModel.PROP_DIA_SELECCIONADO));
        Bindings.bind(jLabelCurrentIndex, getPresenter().getModel(ReservaSchedulerViewModel.PROP_INDICE_ACTUAL));
        Bindings.bind(jLabelTotalIndexes, getPresenter().getModel(ReservaSchedulerViewModel.PROP_TOTAL_INDICES));
        jButtonNext.addActionListener(getPresenter().getOperation(ReservaSchedulerViewPresenter.ACTION_NEXT));
        jButtonBack.addActionListener(getPresenter().getOperation(ReservaSchedulerViewPresenter.ACTION_BACK));

        getPresenter().addPropertyChangeListener(ReservaSchedulerViewPresenter.PROP_SHOW_SCHEDULE, (PropertyChangeEvent evt) -> {
            setModelToScheduler();
        });
    }

    private void setModelToScheduler() {
        model = new ScheduleModel(getPresenter().getBean().getSelected_date(),
                getPresenter().getBean().getLista_ubicaciones(),
                getPresenter().getBean().getList_categorias(),
                getPresenter().getBean().getLista_reservas());
        scheduler.setModel(model);
        scheduler.showDate(model.getDate());
    }

    @Override
    public void uiInit() {
        initComponents();
        scheduler.addScheduleListener((Resource resource, LocalDateTime time) -> {
            handleAddAppointment(resource, time);
        });

        CustomComponentFactory componentFactory = new CustomComponentFactory();
        componentFactory.setAppointmentListener(new AppointmentListener() {
            @Override
            public void handleClick(Appointment appointment, int clickCount) {
                if (clickCount == 2) {
                    handleAppointmentEdit(appointment);
                }
            }

            @Override
            public void handleDelete(Appointment appointment) {
//                model.deleteAppointment(appointment);
            }

            @Override
            public void handleEdit(Appointment appointment) {
                handleAppointmentEdit(appointment);
            }

        });

        scheduler.setComponentFactory(componentFactory);
        setModelToScheduler();
    }

    @Override
    public ReservaSchedulerViewPresenter getPresenter() {
        return (ReservaSchedulerViewPresenter) super.getPresenter(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

}
