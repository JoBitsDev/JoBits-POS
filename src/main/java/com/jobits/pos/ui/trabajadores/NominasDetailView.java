/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.trabajadores;

import com.jgoodies.binding.adapter.Bindings;
import com.jgoodies.binding.list.SelectionInList;
import java.util.ArrayList;
import java.util.List;
import org.knowm.xchart.PieChart;
import org.knowm.xchart.PieChartBuilder;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.XYSeries;
import org.knowm.xchart.style.PieStyler;
import org.knowm.xchart.style.Styler;
import com.jobits.pos.controller.trabajadores.NominasController;
import com.jobits.pos.domain.AsistenciaPersonalEstadisticas;
import com.jobits.pos.ui.AbstractViewPanel;
import com.jobits.pos.ui.presenters.AbstractViewPresenter;
import com.jobits.pos.ui.trabajadores.presenter.NominasDetailPresenter;
import com.jobits.pos.ui.utils.BindableTableModel;
import com.jobits.pos.ui.utils.utils;
import com.jobits.ui.components.MaterialComponentsFactory;
import static com.jobits.pos.ui.trabajadores.presenter.NominasDetailViewModel.*;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ListModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Jorge
 */

//TODO: cuando cambias de redio button no actualiza
//TODO: paneles de colores distintos
//

public class NominasDetailView extends AbstractViewPanel {

    BindableTableModel<AsistenciaPersonalEstadisticas> model;

    public static final String VIEW_NAME = "NÃ³minas";

    public NominasDetailView(AbstractViewPresenter presenter) {
        super(presenter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanelTop = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jXDatePickerDesde = MaterialComponentsFactory.Input.getDatePicker();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jLabel2 = new javax.swing.JLabel();
        jXDatePickerHasta = MaterialComponentsFactory.Input.getDatePicker();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jButtonBuscar = MaterialComponentsFactory.Buttons.getMaterialButton();
        jPanelIzq = new javax.swing.JPanel();
        jPanelDetalles = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonAcumulado = MaterialComponentsFactory.Buttons.getOutlinedButton();
        jButtonPagar = MaterialComponentsFactory.Buttons.getMaterialButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableUsuariosActivos = new javax.swing.JTable();
        jCheckBoxseleccionarTodos = new javax.swing.JCheckBox();
        jPanelData = new javax.swing.JPanel();
        jPanelGrafica = new javax.swing.JPanel();
        jPanelChoice = new javax.swing.JPanel();
        jRadioButtonXY = new javax.swing.JRadioButton();
        jRadioButtonPie = new javax.swing.JRadioButton();
        jPanelEstadisticaGeneral = new javax.swing.JPanel();
        jLabelAcumulado = MaterialComponentsFactory.Displayers.getLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        setOpaque(false);
        setLayout(new java.awt.BorderLayout(5, 5));

        jPanelTop.setBackground(new java.awt.Color(204, 204, 204));
        jPanelTop.setOpaque(false);
        jPanelTop.setPreferredSize(new java.awt.Dimension(274, 60));
        jPanelTop.setLayout(new java.awt.BorderLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Desde");
        jPanel1.add(jLabel1);

        jXDatePickerDesde.setMaximumSize(new java.awt.Dimension(250, 40));
        jXDatePickerDesde.setMinimumSize(new java.awt.Dimension(130, 40));
        jXDatePickerDesde.setPreferredSize(new java.awt.Dimension(250, 40));
        jPanel1.add(jXDatePickerDesde);
        jPanel1.add(filler3);

        jLabel2.setText("Hasta");
        jPanel1.add(jLabel2);

        jXDatePickerHasta.setMaximumSize(new java.awt.Dimension(250, 40));
        jXDatePickerHasta.setMinimumSize(new java.awt.Dimension(130, 40));
        jXDatePickerHasta.setPreferredSize(new java.awt.Dimension(250, 40));
        jPanel1.add(jXDatePickerHasta);
        jPanel1.add(filler1);

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/detalles.png"))); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setToolTipText("Vista Detallada");
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(150, 60));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(100, 60));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(130, 50));
        jPanel1.add(jButtonBuscar);

        jPanelTop.add(jPanel1, java.awt.BorderLayout.CENTER);

        add(jPanelTop, java.awt.BorderLayout.PAGE_START);

        jPanelIzq.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        jPanelIzq.setMinimumSize(new java.awt.Dimension(375, 510));
        jPanelIzq.setOpaque(false);
        jPanelIzq.setPreferredSize(new java.awt.Dimension(375, 510));
        jPanelIzq.setLayout(new java.awt.BorderLayout(5, 5));

        jPanelDetalles.setBackground(new java.awt.Color(204, 204, 204));
        jPanelDetalles.setOpaque(false);
        jPanelDetalles.setLayout(new java.awt.BorderLayout());

        jPanel2.setOpaque(false);

        jButtonAcumulado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/impresora.png"))); // NOI18N
        jButtonAcumulado.setText("Imprimir");
        jButtonAcumulado.setPreferredSize(new java.awt.Dimension(130, 50));
        jPanel2.add(jButtonAcumulado);

        jButtonPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/banknote.png"))); // NOI18N
        jButtonPagar.setText("Pagar");
        jButtonPagar.setPreferredSize(new java.awt.Dimension(130, 50));
        jPanel2.add(jButtonPagar);

        jPanelDetalles.add(jPanel2, java.awt.BorderLayout.EAST);

        jPanelIzq.add(jPanelDetalles, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setOpaque(false);

        jTableUsuariosActivos.setAutoCreateRowSorter(true);
        jTableUsuariosActivos.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTableUsuariosActivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Dias", "Promedio", ""
            }
        ));
        jScrollPane2.setViewportView(jTableUsuariosActivos);
        if (jTableUsuariosActivos.getColumnModel().getColumnCount() > 0) {
            jTableUsuariosActivos.getColumnModel().getColumn(0).setMinWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(0).setMaxWidth(150);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setMinWidth(50);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setMinWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setMaxWidth(150);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setMinWidth(30);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jPanelIzq.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jCheckBoxseleccionarTodos.setText("Seleccionar Todos");
        jCheckBoxseleccionarTodos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanelIzq.add(jCheckBoxseleccionarTodos, java.awt.BorderLayout.PAGE_START);

        add(jPanelIzq, java.awt.BorderLayout.WEST);

        jPanelData.setOpaque(false);
        jPanelData.setLayout(new java.awt.BorderLayout());

        jPanelGrafica.setOpaque(false);
        jPanelGrafica.setLayout(new java.awt.BorderLayout());

        jPanelChoice.setOpaque(false);
        jPanelChoice.setPreferredSize(new java.awt.Dimension(244, 60));
        jPanelChoice.setLayout(new java.awt.GridLayout(1, 0));

        jRadioButtonXY.setSelected(true);
        jRadioButtonXY.setText("Dias Trabajados");
        jRadioButtonXY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonXY.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButtonXY.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanelChoice.add(jRadioButtonXY);

        jRadioButtonPie.setText("Ventas Generales");
        jRadioButtonPie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonPie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButtonPie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanelChoice.add(jRadioButtonPie);

        jPanelGrafica.add(jPanelChoice, java.awt.BorderLayout.PAGE_END);

        jPanelData.add(jPanelGrafica, java.awt.BorderLayout.CENTER);

        jPanelEstadisticaGeneral.setOpaque(false);
        jPanelEstadisticaGeneral.setPreferredSize(new java.awt.Dimension(300, 60));
        jPanelEstadisticaGeneral.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        jLabelAcumulado.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelAcumulado.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelAcumulado.setText("           --               ");
        jLabelAcumulado.setBorder(javax.swing.BorderFactory.createCompoundBorder(new org.jdesktop.swingx.border.DropShadowBorder(), javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Total", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18)))); // NOI18N
        jLabelAcumulado.setMaximumSize(new java.awt.Dimension(300, 50));
        jLabelAcumulado.setMinimumSize(new java.awt.Dimension(193, 40));
        jLabelAcumulado.setPreferredSize(new java.awt.Dimension(300, 50));
        jPanelEstadisticaGeneral.add(jLabelAcumulado);

        jPanelData.add(jPanelEstadisticaGeneral, java.awt.BorderLayout.PAGE_START);

        add(jPanelData, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public NominasController getController() {
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JButton jButtonAcumulado;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonPagar;
    private javax.swing.JCheckBox jCheckBoxseleccionarTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAcumulado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelChoice;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPanel jPanelDetalles;
    private javax.swing.JPanel jPanelEstadisticaGeneral;
    private javax.swing.JPanel jPanelGrafica;
    private javax.swing.JPanel jPanelIzq;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JRadioButton jRadioButtonPie;
    private javax.swing.JRadioButton jRadioButtonXY;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableUsuariosActivos;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerDesde;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerHasta;
    // End of variables declaration//GEN-END:variables

    private void updateDetallesPanel(List<AsistenciaPersonalEstadisticas> displayList, Choice choice) {
        if (jPanelGrafica.getComponentCount() > 1) {
            jPanelGrafica.remove(1);
        }
        XYChart chart = new XYChartBuilder().xAxisTitle("Dias").yAxisTitle("Monto").build();
        PieChart chartPie = new PieChartBuilder().theme(Styler.ChartTheme.XChart).title("Total Pago").build();

        chart.getStyler().setDatePattern("dd'/'MM'/'yy");
        chart.getStyler().setPlotGridLinesVisible(false);

        chartPie.getStyler().setAnnotationType(PieStyler.AnnotationType.Percentage);

        float acumulado = 0, propina = 0;

        for (AsistenciaPersonalEstadisticas a : displayList) {
            String label = a.getP().getUsuario() + "(" + a.getCantidadDiasTrabajados() + " Dias) ( " + utils.setDosLugaresDecimales(a.getTotalPago()) + ")";
            XYSeries serie = chart.addSeries(label, a.getDiasTrabajados(), a.getMontos());
            chartPie.addSeries(label, a.getTotalPago());
            acumulado += a.getTotalPago();
            propina += a.getTotalPropina();

        }

        XChartPanel wrapper = new XChartPanel(chart),
                wrapperPie = new XChartPanel(chartPie);

        switch (choice) {
            case PIE:
                jPanelGrafica.add(wrapperPie, BorderLayout.CENTER);
                break;
            case XY:
                jPanelGrafica.add(wrapper, BorderLayout.CENTER);
                break;
            default:
                break;

        }
        jLabelAcumulado.setText(utils.setDosLugaresDecimales(acumulado));
    }

    @Override
    public String getViewName() {
        return VIEW_NAME;
    }

    @Override
    public void wireUp() {
        Bindings.bind(jTableUsuariosActivos, new SelectionInList(
                getPresenter().getModel(PROP_LISTA_PERSONAL),
                getPresenter().getModel(PROP_PERSONAL_SELECCIONADO)));
        jButtonBuscar.setAction(getPresenter().getOperation(NominasDetailPresenter.ACTION_BUSCAR));
        jButtonPagar.setAction(getPresenter().getOperation(NominasDetailPresenter.ACTION_PAGAR));
        jButtonAcumulado.setAction(getPresenter().getOperation(NominasDetailPresenter.ACTION_IMPRIMIR));
        jCheckBoxseleccionarTodos.setAction(getPresenter().getOperation(NominasDetailPresenter.ACTION_SELECCIONAR_TODOS));
        Bindings.bind(jCheckBoxseleccionarTodos, getPresenter().getModel(PROP_SELECCIONAR_TODO_SELECCIONADO));
        Bindings.bind(jXDatePickerHasta, "date", getPresenter().getModel(PROP_FECHA_HASTA));
        Bindings.bind(jXDatePickerDesde, "date", getPresenter().getModel(PROP_FECHA_DESDE));
    }

    @Override
    public void uiInit() {
        initComponents();
        model = new BindableTableModel<AsistenciaPersonalEstadisticas>(jTableUsuariosActivos) {
            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getRow(rowIndex).getP().getUsuario();
                    case 1:
                        return getRow(rowIndex).getCantidadDiasTrabajados();
                    case 2:
                        return utils.setDosLugaresDecimales(getRow(rowIndex).getPromedioCobro());
                    case 3:
                        return getRow(rowIndex).isUse();
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Usuario";
                    case 1:
                        return "Dias";
                    case 2:
                        return "Promedio";
                    case 3:
                        return "";
                    default:
                        return null;

                }
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 3 ? Boolean.class : super.getColumnClass(columnIndex);
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return columnIndex == 3;
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                getRow(rowIndex).setUse((boolean) aValue);
                fireTableRowsUpdated(rowIndex, rowIndex);
            }
        };
        jTableUsuariosActivos.setModel(model);
        jTableUsuariosActivos.getModel().addTableModelListener((TableModelEvent e) -> {
            if (e.getType() == TableModelEvent.UPDATE) {
                onDetallesClick();
            }
        });
        buttonGroup1.add(jRadioButtonPie);
        buttonGroup1.add(jRadioButtonXY);
        jRadioButtonPie.addChangeListener((ChangeEvent e) -> {
            onDetallesClick();
        });
        jRadioButtonXY.addChangeListener((ChangeEvent e) -> {
            onDetallesClick();
        });

    }

    private enum Choice {
        PIE, XY, RAW
    }

    void onDetallesClick() {
        if (jTableUsuariosActivos.getModel().getRowCount() > 0) {
            List<AsistenciaPersonalEstadisticas> use = new ArrayList<>();
            ListModel<AsistenciaPersonalEstadisticas> aux = ((BindableTableModel<AsistenciaPersonalEstadisticas>) jTableUsuariosActivos.getModel()).getListModel();
            for (int i = 0; i < aux.getSize(); i++) {
                if (aux.getElementAt(i).isUse()) {
                    use.add(aux.getElementAt(i));
                }
            }

            Choice choice = Choice.XY;
            if (jRadioButtonPie.isSelected()) {
                choice = Choice.PIE;
            }

            updateDetallesPanel(use, choice);
        }

    }

}
