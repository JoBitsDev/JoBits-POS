/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jobits.pos.ui.trabajadores;

import com.jobits.pos.ui.AbstractDetailView;
import com.jobits.pos.ui.utils.TableWithComboBoxAutoComplete;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.PieChart;
import org.knowm.xchart.PieChartBuilder;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.XYSeries;
import org.knowm.xchart.style.PieStyler;
import org.knowm.xchart.style.Styler;
import org.knowm.xchart.style.XChartTheme;
import org.knowm.xchart.style.markers.Circle;
import org.knowm.xchart.style.markers.SeriesMarkers;
import com.jobits.pos.controller.AbstractDialogController;
import com.jobits.pos.controller.trabajadores.NominasController;
import com.jobits.pos.exceptions.DevelopingOperationException;
import com.jobits.pos.exceptions.NoSelectedException;
import com.jobits.pos.persistencia.AsistenciaPersonal;
import com.jobits.pos.recursos.R;
import com.jobits.pos.ui.utils.RestManagerAbstractTableModel;
import com.jobits.pos.ui.utils.utils;

/**
 *
 * @author Jorge
 */
public class NominasEstadisticasView extends AbstractDetailView<AsistenciaPersonal> {

    RestManagerAbstractTableModel<NominasController.AsistenciaPersonalEstadisticas> model;

    public NominasEstadisticasView(AsistenciaPersonal instance, AbstractDialogController controller) {
        super(instance, DialogType.FULL_SCREEN, controller);
    }

    public NominasEstadisticasView(AsistenciaPersonal instance, AbstractDialogController controller, Dialog owner, boolean modal) {
        super(instance, DialogType.FULL_SCREEN, controller, owner, modal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanelTop = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDateChooserDel = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jDateChooserAl = new com.toedter.calendar.JDateChooser();
        jButtonBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanelDer = new javax.swing.JPanel();
        jPanelIzq = new javax.swing.JPanel();
        jPanelDetalles = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonPagar = new javax.swing.JButton();
        jButtonDetalles = new javax.swing.JButton();
        jLabelUltimoPago = new javax.swing.JLabel();
        jPanelChoice = new javax.swing.JPanel();
        jRadioButtonXY = new javax.swing.JRadioButton();
        jRadioButtonPie = new javax.swing.JRadioButton();
        jRadioButtonRaw = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableUsuariosActivos = new javax.swing.JTable();
        jCheckBoxseleccionarTodos = new javax.swing.JCheckBox();
        jPanelData = new javax.swing.JPanel();
        jPanelControles = new javax.swing.JPanel();
        jButtonAcumulado = new javax.swing.JButton();
        jPanelGrafica = new javax.swing.JPanel();
        jPanelEstadisticaGeneral = new javax.swing.JPanel();
        jLabelAcumulado = new javax.swing.JLabel();
        jLabelMedia = new javax.swing.JLabel();
        jLabelPropina = new javax.swing.JLabel();
        jLabelAMayores = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        jPanelTop.setBackground(new java.awt.Color(204, 204, 204));
        jPanelTop.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanelTop.setLayout(new java.awt.BorderLayout());

        jPanel1.setOpaque(false);

        jLabel1.setText("Del");
        jPanel1.add(jLabel1);

        jDateChooserDel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserDelPropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooserDel);

        jLabel2.setText("Al");
        jPanel1.add(jLabel2);
        jPanel1.add(jDateChooserAl);

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/detalles.png"))); // NOI18N
        jButtonBuscar.setToolTipText("Vista Detallada");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscar);

        jPanelTop.add(jPanel1, java.awt.BorderLayout.EAST);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/logout40.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanelTop.add(jButton1, java.awt.BorderLayout.LINE_START);

        getContentPane().add(jPanelTop, java.awt.BorderLayout.PAGE_START);
        getContentPane().add(jPanelDer, java.awt.BorderLayout.EAST);

        jPanelIzq.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        jPanelIzq.setMinimumSize(new java.awt.Dimension(375, 510));
        jPanelIzq.setPreferredSize(new java.awt.Dimension(375, 510));
        jPanelIzq.setLayout(new java.awt.BorderLayout(5, 5));

        jPanelDetalles.setBackground(new java.awt.Color(204, 204, 204));
        jPanelDetalles.setBorder(new org.edisoncor.gui.util.DropShadowBorder());
        jPanelDetalles.setLayout(new java.awt.BorderLayout());

        jPanel2.setOpaque(false);

        jButtonPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/banknote.png"))); // NOI18N
        jButtonPagar.setText("Pagar");
        jButtonPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPagarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonPagar);

        jButtonDetalles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/analitica.png"))); // NOI18N
        jButtonDetalles.setText("Detalles");
        jButtonDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetallesActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonDetalles);

        jPanelDetalles.add(jPanel2, java.awt.BorderLayout.EAST);

        jLabelUltimoPago.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabelUltimoPago.setText("--/--/--  ");
        jLabelUltimoPago.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0), 3), "Ãšltimo Pago"));
        jPanelDetalles.add(jLabelUltimoPago, java.awt.BorderLayout.WEST);

        jPanelChoice.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualizar como"));
        jPanelChoice.setOpaque(false);
        jPanelChoice.setLayout(new java.awt.GridLayout(1, 0));

        jRadioButtonXY.setSelected(true);
        jRadioButtonXY.setText("Dias Trabajados");
        jRadioButtonXY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonXY.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButtonXY.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanelChoice.add(jRadioButtonXY);

        jRadioButtonPie.setText("Ventas Generales");
        jRadioButtonPie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonPie.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButtonPie.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanelChoice.add(jRadioButtonPie);

        jRadioButtonRaw.setText("Tabla");
        jRadioButtonRaw.setEnabled(false);
        jRadioButtonRaw.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jRadioButtonRaw.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jRadioButtonRaw.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanelChoice.add(jRadioButtonRaw);

        jPanelDetalles.add(jPanelChoice, java.awt.BorderLayout.PAGE_START);

        jPanelIzq.add(jPanelDetalles, java.awt.BorderLayout.PAGE_END);

        jTableUsuariosActivos.setAutoCreateRowSorter(true);
        jTableUsuariosActivos.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTableUsuariosActivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Dias", "Promedio", ""
            }
        ));
        jScrollPane2.setViewportView(jTableUsuariosActivos);
        if (jTableUsuariosActivos.getColumnModel().getColumnCount() > 0) {
            jTableUsuariosActivos.getColumnModel().getColumn(0).setMinWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(0).setMaxWidth(150);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setMinWidth(50);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTableUsuariosActivos.getColumnModel().getColumn(1).setMaxWidth(80);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setMinWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableUsuariosActivos.getColumnModel().getColumn(2).setMaxWidth(150);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setMinWidth(30);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTableUsuariosActivos.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jPanelIzq.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jCheckBoxseleccionarTodos.setText("Seleccionar Todos");
        jCheckBoxseleccionarTodos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jCheckBoxseleccionarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxseleccionarTodosActionPerformed(evt);
            }
        });
        jPanelIzq.add(jCheckBoxseleccionarTodos, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanelIzq, java.awt.BorderLayout.WEST);

        jPanelData.setLayout(new java.awt.BorderLayout());

        jPanelControles.setLayout(new java.awt.BorderLayout());

        jButtonAcumulado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restManager/resources/images/impresora.png"))); // NOI18N
        jButtonAcumulado.setText("Imprimir Acumulado");
        jButtonAcumulado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcumuladoActionPerformed(evt);
            }
        });
        jPanelControles.add(jButtonAcumulado, java.awt.BorderLayout.EAST);

        jPanelData.add(jPanelControles, java.awt.BorderLayout.PAGE_END);

        jPanelGrafica.setLayout(new java.awt.BorderLayout());
        jPanelData.add(jPanelGrafica, java.awt.BorderLayout.CENTER);

        jPanelEstadisticaGeneral.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        jLabelAcumulado.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelAcumulado.setText("           --               ");
        jLabelAcumulado.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0), 3), "Acumulado"));
        jPanelEstadisticaGeneral.add(jLabelAcumulado);

        jLabelMedia.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelMedia.setText("           --               ");
        jLabelMedia.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0), 3), "Media"));
        jPanelEstadisticaGeneral.add(jLabelMedia);

        jLabelPropina.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelPropina.setText("           --               ");
        jLabelPropina.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0), 3), "Propina"));
        jPanelEstadisticaGeneral.add(jLabelPropina);

        jLabelAMayores.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelAMayores.setText("           --               ");
        jLabelAMayores.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 3), "A Mayores"));
        jPanelEstadisticaGeneral.add(jLabelAMayores);

        jPanelData.add(jPanelEstadisticaGeneral, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanelData, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDateChooserDelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserDelPropertyChange
        if (evt.getPropertyName().equals("date")) {
            jDateChooserAl.setDate((Date) evt.getNewValue());
        }
        //        jDateChooserAl.setDate((Date) evt.getNewValue());
    }//GEN-LAST:event_jDateChooserDelPropertyChange

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        if (jDateChooserDel.getDate() != null && jDateChooserAl.getDate() != null) {
            updateTableAsistenciaPersonal();
        } else {
            throw new NoSelectedException(this);
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetallesActionPerformed
        if (jTableUsuariosActivos.getModel().getRowCount() > 0) {
            List<NominasController.AsistenciaPersonalEstadisticas> use = new ArrayList<>(),
                    aux = ((RestManagerAbstractTableModel<NominasController.AsistenciaPersonalEstadisticas>) jTableUsuariosActivos.getModel()).getItems();
            for (NominasController.AsistenciaPersonalEstadisticas a : aux) {
                if (a.isUse()) {
                    use.add(a);
                }
            }
            Choice choice = Choice.XY;
            if (jRadioButtonPie.isSelected()) {
                choice = Choice.PIE;
            }
            if (jRadioButtonRaw.isSelected()) {
                choice = Choice.RAW;
            }
            updateDetallesPanel(use, choice);
        }

    }//GEN-LAST:event_jButtonDetallesActionPerformed

    private void jButtonPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPagarActionPerformed
        if (model != null) {
            for (NominasController.AsistenciaPersonalEstadisticas i : model.getItems()) {
                if (i.isUse()) {
                    getController().pagar(i);
                }
            }
        }
    }//GEN-LAST:event_jButtonPagarActionPerformed

    private void jButtonAcumuladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcumuladoActionPerformed
        getController().imprimirEstadisticas(model.getItems());
    }//GEN-LAST:event_jButtonAcumuladoActionPerformed

    private void jCheckBoxseleccionarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxseleccionarTodosActionPerformed
        seleccionarTodos(jCheckBoxseleccionarTodos.isSelected());
    }//GEN-LAST:event_jCheckBoxseleccionarTodosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    @Override
    public void fetchComponentData() {
        jTableUsuariosActivos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    jLabelUltimoPago.setText(R.DATE_FORMAT.format(model.getObjectAtSelectedRow().getP().getUltimodiaPago()));
                }
            }
        });

        buttonGroup1.add(jRadioButtonPie);
        buttonGroup1.add(jRadioButtonRaw);
        buttonGroup1.add(jRadioButtonXY);
    }

    @Override
    public void setEditingMode() {
        throw new DevelopingOperationException(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setCreatingMode() {
        throw new DevelopingOperationException(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean validateData() {
        throw new DevelopingOperationException(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void updateView() {
        initComponents();
        fetchComponentData();
    }

    public void updateTableAsistenciaPersonal() {
        model = new RestManagerAbstractTableModel<NominasController.AsistenciaPersonalEstadisticas>(
                getController().getPersonalActivo(jDateChooserDel.getDate(), jDateChooserAl.getDate()),
                jTableUsuariosActivos) {
            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return getItems().get(rowIndex).getP().getUsuario();
                    case 1:
                        return getItems().get(rowIndex).getCantidadDiasTrabajados();
                    case 2:
                        return utils.setDosLugaresDecimales(getItems().get(rowIndex).getPromedioCobro());
                    case 3:
                        return getItems().get(rowIndex).isUse();
                    default:
                        return null;
                }
            }

            @Override
            public String getColumnName(int column) {
                switch (column) {
                    case 0:
                        return "Usuario";
                    case 1:
                        return "Dias";
                    case 2:
                        return "Promedio";
                    case 3:
                        return "";
                    default:
                        return null;

                }
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 3 ? Boolean.class : super.getColumnClass(columnIndex);
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return columnIndex == 3;
            }

            @Override
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
                getItems().get(rowIndex).setUse((boolean) aValue);
                fireTableRowsUpdated(rowIndex, rowIndex);
            }
        };

        jTableUsuariosActivos.setModel(model);

    }

    @Override
    public NominasController getController() {
        return (NominasController) super.getController(); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAcumulado;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonDetalles;
    private javax.swing.JButton jButtonPagar;
    private javax.swing.JCheckBox jCheckBoxseleccionarTodos;
    private com.toedter.calendar.JDateChooser jDateChooserAl;
    private com.toedter.calendar.JDateChooser jDateChooserDel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAMayores;
    private javax.swing.JLabel jLabelAcumulado;
    private javax.swing.JLabel jLabelMedia;
    private javax.swing.JLabel jLabelPropina;
    private javax.swing.JLabel jLabelUltimoPago;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelChoice;
    private javax.swing.JPanel jPanelControles;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPanel jPanelDer;
    private javax.swing.JPanel jPanelDetalles;
    private javax.swing.JPanel jPanelEstadisticaGeneral;
    private javax.swing.JPanel jPanelGrafica;
    private javax.swing.JPanel jPanelIzq;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JRadioButton jRadioButtonPie;
    private javax.swing.JRadioButton jRadioButtonRaw;
    private javax.swing.JRadioButton jRadioButtonXY;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableUsuariosActivos;
    // End of variables declaration//GEN-END:variables

    private void updateDetallesPanel(List<NominasController.AsistenciaPersonalEstadisticas> displayList, Choice choice) {
        if (jPanelGrafica.getComponentCount() > 0) {
            jPanelGrafica.removeAll();
        }
        XYChart chart = new XYChartBuilder().xAxisTitle("Dias").yAxisTitle("Monto").build();
        PieChart chartPie = new PieChartBuilder().theme(Styler.ChartTheme.XChart).title("Total Pago").build();

        chart.getStyler().setDatePattern("dd'/'MM'/'yy");
        chart.getStyler().setPlotGridLinesVisible(false);

        chartPie.getStyler().setAnnotationType(PieStyler.AnnotationType.Percentage);

        float acumulado = 0, propina = 0, aMayores = 0;

        for (NominasController.AsistenciaPersonalEstadisticas a : displayList) {
            String label = a.getP().getUsuario() + "(" + a.getCantidadDiasTrabajados() + " Dias) ( " + utils.setDosLugaresDecimales(a.getTotalPago()) + ")";
            XYSeries serie = chart.addSeries(label, a.getDiasTrabajados(), a.getMontos());
            chartPie.addSeries(label, a.getTotalSalary());
            acumulado += a.getTotalSalary();
            propina += a.getTotalPropina();
            aMayores += a.getTotalAMayores();

        }

        XChartPanel wrapper = new XChartPanel(chart),
                wrapperPie = new XChartPanel(chartPie);

        switch (choice) {
            case PIE:
                jPanelGrafica.add(wrapperPie);
                break;
            case XY:
                jPanelGrafica.add(wrapper);
                break;
            default:
                break;

        }
        jLabelAcumulado.setText(utils.setDosLugaresDecimales(acumulado));
        jLabelPropina.setText(utils.setDosLugaresDecimales(propina));
        jLabelMedia.setText(utils.setDosLugaresDecimales(acumulado / displayList.size()));
        pack();
        jLabelAMayores.setText(utils.setDosLugaresDecimales(aMayores));
    }

    private void seleccionarTodos(boolean selected) {
        if (model != null) {
            for (NominasController.AsistenciaPersonalEstadisticas x : model.getItems()) {
                x.setUse(selected);
            }
            model.fireTableDataChanged();
        }
    }

    private enum Choice {
        PIE, XY, RAW
    }
}
